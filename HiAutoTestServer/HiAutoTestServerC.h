// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:146

#ifndef _TAO_IDL_HIAUTOTESTSERVERC_1TCMEH_H_
#define _TAO_IDL_HIAUTOTESTSERVERC_1TCMEH_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include /**/ "tao/Versioned_Namespace.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

// TAO_IDL - Generated from 
// be/be_visitor_root/root_ch.cpp:142
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:41

namespace autoTest
{

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct Parameter;

  typedef
    ::TAO_Var_Var_T<
        Parameter
      >
    Parameter_var;
  
  typedef
    ::TAO_Out_T<
        Parameter
      >
    Parameter_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  Parameter
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef Parameter_var _var_type;
    typedef Parameter_out _out_type;
    
    ::TAO::String_Manager parameterName;
    ::CORBA::Short parameterID;
    ::TAO::String_Manager value;
    ::TAO::String_Manager defaultValue;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_PARAMETERSEQ_CH_)
#define _AUTOTEST_PARAMETERSEQ_CH_

  class ParameterSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ParameterSeq
      >
    ParameterSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ParameterSeq
      >
    ParameterSeq_out;

  class  ParameterSeq
    : public
        ::TAO::unbounded_value_sequence<
            Parameter
          >
  {
  public:
    ParameterSeq (void);
    ParameterSeq ( ::CORBA::ULong max);
    ParameterSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      Parameter* buffer, 
      ::CORBA::Boolean release = false);
    ParameterSeq (const ParameterSeq &);
    virtual ~ParameterSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ParameterSeq_var _var_type;
    typedef ParameterSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct ChannelPara;

  typedef
    ::TAO_Var_Var_T<
        ChannelPara
      >
    ChannelPara_var;
  
  typedef
    ::TAO_Out_T<
        ChannelPara
      >
    ChannelPara_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  ChannelPara
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ChannelPara_var _var_type;
    typedef ChannelPara_out _out_type;
    
    ::CORBA::Short channelID;
    ::CORBA::Short direction;
    ::CORBA::Short mode;
    autoTest::ParameterSeq paras;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CHANNELPARASEQ_CH_)
#define _AUTOTEST_CHANNELPARASEQ_CH_

  class ChannelParaSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        ChannelParaSeq
      >
    ChannelParaSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        ChannelParaSeq
      >
    ChannelParaSeq_out;

  class  ChannelParaSeq
    : public
        ::TAO::unbounded_value_sequence<
            ChannelPara
          >
  {
  public:
    ChannelParaSeq (void);
    ChannelParaSeq ( ::CORBA::ULong max);
    ChannelParaSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ChannelPara* buffer, 
      ::CORBA::Boolean release = false);
    ChannelParaSeq (const ChannelParaSeq &);
    virtual ~ChannelParaSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ChannelParaSeq_var _var_type;
    typedef ChannelParaSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CardPara;

  typedef
    ::TAO_Var_Var_T<
        CardPara
      >
    CardPara_var;
  
  typedef
    ::TAO_Out_T<
        CardPara
      >
    CardPara_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CardPara
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardPara_var _var_type;
    typedef CardPara_out _out_type;
    
    ::TAO::String_Manager type;
    ::CORBA::Short cardNo;
    ::TAO::String_Manager cardName;
    autoTest::ChannelParaSeq chnParas;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CARDPARASEQ_CH_)
#define _AUTOTEST_CARDPARASEQ_CH_

  class CardParaSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        CardParaSeq
      >
    CardParaSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CardParaSeq
      >
    CardParaSeq_out;

  class  CardParaSeq
    : public
        ::TAO::unbounded_value_sequence<
            CardPara
          >
  {
  public:
    CardParaSeq (void);
    CardParaSeq ( ::CORBA::ULong max);
    CardParaSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CardPara* buffer, 
      ::CORBA::Boolean release = false);
    CardParaSeq (const CardParaSeq &);
    virtual ~CardParaSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardParaSeq_var _var_type;
    typedef CardParaSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CardManagerPara;

  typedef
    ::TAO_Var_Var_T<
        CardManagerPara
      >
    CardManagerPara_var;
  
  typedef
    ::TAO_Out_T<
        CardManagerPara
      >
    CardManagerPara_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CardManagerPara
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardManagerPara_var _var_type;
    typedef CardManagerPara_out _out_type;
    
    autoTest::CardParaSeq cardParas;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CARDMANAGERSEQ_CH_)
#define _AUTOTEST_CARDMANAGERSEQ_CH_

  class CardManagerSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        CardManagerSeq
      >
    CardManagerSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CardManagerSeq
      >
    CardManagerSeq_out;

  class  CardManagerSeq
    : public
        ::TAO::unbounded_value_sequence<
            CardManagerPara
          >
  {
  public:
    CardManagerSeq (void);
    CardManagerSeq ( ::CORBA::ULong max);
    CardManagerSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CardManagerPara* buffer, 
      ::CORBA::Boolean release = false);
    CardManagerSeq (const CardManagerSeq &);
    virtual ~CardManagerSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardManagerSeq_var _var_type;
    typedef CardManagerSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct TY_HI_TIME;

  typedef
    ::TAO_Fixed_Var_T<
        TY_HI_TIME
      >
    TY_HI_TIME_var;
  
  typedef
    TY_HI_TIME &
    TY_HI_TIME_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  TY_HI_TIME
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef TY_HI_TIME_var _var_type;
    typedef TY_HI_TIME_out _out_type;
    
    ::CORBA::LongLong sec;
    ::CORBA::LongLong usec;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct ReturnInfo;

  typedef
    ::TAO_Fixed_Var_T<
        ReturnInfo
      >
    ReturnInfo_var;
  
  typedef
    ReturnInfo &
    ReturnInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  ReturnInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ReturnInfo_var _var_type;
    typedef ReturnInfo_out _out_type;
    
    ::CORBA::Long sec;
    ::CORBA::Long usec;
    ::CORBA::Short status;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:47

  enum CaseStepStatusE
  {
    STATUS_READY,
    STATUS_RUNNING,
    STATUS_SUCCESS,
    STATUS_FAILED
  };

  typedef CaseStepStatusE &CaseStepStatusE_out;

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:47

  enum ServerRunStatusE
  {
    SERVER_NULL,
    SERVER_INITIAL,
    SERVER_RUNNING,
    SERVER_PAUSE
  };

  typedef ServerRunStatusE &ServerRunStatusE_out;

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CaseExecute;

  typedef
    ::TAO_Var_Var_T<
        CaseExecute
      >
    CaseExecute_var;
  
  typedef
    ::TAO_Out_T<
        CaseExecute
      >
    CaseExecute_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CaseExecute
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CaseExecute_var _var_type;
    typedef CaseExecute_out _out_type;
    
    ::TAO::String_Manager caseID;
    ::CORBA::Short caseExecuteTimes;
    ::CORBA::Short interval;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CASEEXECUTESEQ_CH_)
#define _AUTOTEST_CASEEXECUTESEQ_CH_

  class CaseExecuteSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        CaseExecuteSeq
      >
    CaseExecuteSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CaseExecuteSeq
      >
    CaseExecuteSeq_out;

  class  CaseExecuteSeq
    : public
        ::TAO::unbounded_value_sequence<
            CaseExecute
          >
  {
  public:
    CaseExecuteSeq (void);
    CaseExecuteSeq ( ::CORBA::ULong max);
    CaseExecuteSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CaseExecute* buffer, 
      ::CORBA::Boolean release = false);
    CaseExecuteSeq (const CaseExecuteSeq &);
    virtual ~CaseExecuteSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CaseExecuteSeq_var _var_type;
    typedef CaseExecuteSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct TestExecute;

  typedef
    ::TAO_Var_Var_T<
        TestExecute
      >
    TestExecute_var;
  
  typedef
    ::TAO_Out_T<
        TestExecute
      >
    TestExecute_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  TestExecute
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef TestExecute_var _var_type;
    typedef TestExecute_out _out_type;
    
    ::CORBA::Short testExecuteNum;
    ::CORBA::Short interval;
    autoTest::CaseExecuteSeq caseExecute;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CaseStatus;

  typedef
    ::TAO_Var_Var_T<
        CaseStatus
      >
    CaseStatus_var;
  
  typedef
    ::TAO_Out_T<
        CaseStatus
      >
    CaseStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CaseStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CaseStatus_var _var_type;
    typedef CaseStatus_out _out_type;
    
    ::TAO::String_Manager caseID;
    autoTest::CaseStepStatusE caseStepStatus;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CASESTATUSSEQ_CH_)
#define _AUTOTEST_CASESTATUSSEQ_CH_

  class CaseStatusSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        CaseStatusSeq
      >
    CaseStatusSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CaseStatusSeq
      >
    CaseStatusSeq_out;

  class  CaseStatusSeq
    : public
        ::TAO::unbounded_value_sequence<
            CaseStatus
          >
  {
  public:
    CaseStatusSeq (void);
    CaseStatusSeq ( ::CORBA::ULong max);
    CaseStatusSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CaseStatus* buffer, 
      ::CORBA::Boolean release = false);
    CaseStatusSeq (const CaseStatusSeq &);
    virtual ~CaseStatusSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CaseStatusSeq_var _var_type;
    typedef CaseStatusSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct StepStatus;

  typedef
    ::TAO_Var_Var_T<
        StepStatus
      >
    StepStatus_var;
  
  typedef
    ::TAO_Out_T<
        StepStatus
      >
    StepStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  StepStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef StepStatus_var _var_type;
    typedef StepStatus_out _out_type;
    
    ::TAO::String_Manager caseID;
    ::TAO::String_Manager stepID;
    autoTest::CaseStepStatusE caseStepStatus;
    ::TAO::String_Manager msg;
    ::TAO::String_Manager attachInfo;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_STEPSTATUSSEQ_CH_)
#define _AUTOTEST_STEPSTATUSSEQ_CH_

  class StepStatusSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        StepStatusSeq
      >
    StepStatusSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        StepStatusSeq
      >
    StepStatusSeq_out;

  class  StepStatusSeq
    : public
        ::TAO::unbounded_value_sequence<
            StepStatus
          >
  {
  public:
    StepStatusSeq (void);
    StepStatusSeq ( ::CORBA::ULong max);
    StepStatusSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      StepStatus* buffer, 
      ::CORBA::Boolean release = false);
    StepStatusSeq (const StepStatusSeq &);
    virtual ~StepStatusSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef StepStatusSeq_var _var_type;
    typedef StepStatusSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct SubStepStatus;

  typedef
    ::TAO_Var_Var_T<
        SubStepStatus
      >
    SubStepStatus_var;
  
  typedef
    ::TAO_Out_T<
        SubStepStatus
      >
    SubStepStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  SubStepStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef SubStepStatus_var _var_type;
    typedef SubStepStatus_out _out_type;
    
    ::TAO::String_Manager caseID;
    ::TAO::String_Manager stepID;
    ::TAO::String_Manager subStepID;
    autoTest::CaseStepStatusE caseStepStatus;
    ::TAO::String_Manager msg;
    ::TAO::String_Manager attachInfo;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_SUBSTEPSTATUSSEQ_CH_)
#define _AUTOTEST_SUBSTEPSTATUSSEQ_CH_

  class SubStepStatusSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        SubStepStatusSeq
      >
    SubStepStatusSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        SubStepStatusSeq
      >
    SubStepStatusSeq_out;

  class  SubStepStatusSeq
    : public
        ::TAO::unbounded_value_sequence<
            SubStepStatus
          >
  {
  public:
    SubStepStatusSeq (void);
    SubStepStatusSeq ( ::CORBA::ULong max);
    SubStepStatusSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      SubStepStatus* buffer, 
      ::CORBA::Boolean release = false);
    SubStepStatusSeq (const SubStepStatusSeq &);
    virtual ~SubStepStatusSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef SubStepStatusSeq_var _var_type;
    typedef SubStepStatusSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct FieldData;

  typedef
    ::TAO_Var_Var_T<
        FieldData
      >
    FieldData_var;
  
  typedef
    ::TAO_Out_T<
        FieldData
      >
    FieldData_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  FieldData
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef FieldData_var _var_type;
    typedef FieldData_out _out_type;
    
    ::TAO::String_Manager icdID;
    ::TAO::String_Manager fieldID;
    ::CORBA::Long data;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CardStatus;

  typedef
    ::TAO_Fixed_Var_T<
        CardStatus
      >
    CardStatus_var;
  
  typedef
    CardStatus &
    CardStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CardStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardStatus_var _var_type;
    typedef CardStatus_out _out_type;
    
    ::CORBA::Long id;
    ::CORBA::Long status;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CARDSTATUSSEQ_CH_)
#define _AUTOTEST_CARDSTATUSSEQ_CH_

  class CardStatusSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        CardStatusSeq
      >
    CardStatusSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CardStatusSeq
      >
    CardStatusSeq_out;

  class  CardStatusSeq
    : public
        ::TAO::unbounded_value_sequence<
            CardStatus
          >
  {
  public:
    CardStatusSeq (void);
    CardStatusSeq ( ::CORBA::ULong max);
    CardStatusSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CardStatus* buffer, 
      ::CORBA::Boolean release = false);
    CardStatusSeq (const CardStatusSeq &);
    virtual ~CardStatusSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardStatusSeq_var _var_type;
    typedef CardStatusSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct ServerStatus;

  typedef
    ::TAO_Var_Var_T<
        ServerStatus
      >
    ServerStatus_var;
  
  typedef
    ::TAO_Out_T<
        ServerStatus
      >
    ServerStatus_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  ServerStatus
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ServerStatus_var _var_type;
    typedef ServerStatus_out _out_type;
    
    ::CORBA::Long id;
    autoTest::ServerRunStatusE serverRunStatus;
    autoTest::CardStatusSeq cardStatus;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CommonStatusInfo;

  typedef
    ::TAO_Var_Var_T<
        CommonStatusInfo
      >
    CommonStatusInfo_var;
  
  typedef
    ::TAO_Out_T<
        CommonStatusInfo
      >
    CommonStatusInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CommonStatusInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CommonStatusInfo_var _var_type;
    typedef CommonStatusInfo_out _out_type;
    
    ::CORBA::Long id;
    ::CORBA::Long status;
    ::TAO::String_Manager statusMsg;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_COMMONSTATUSINFOSEQ_CH_)
#define _AUTOTEST_COMMONSTATUSINFOSEQ_CH_

  class CommonStatusInfoSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        CommonStatusInfoSeq
      >
    CommonStatusInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CommonStatusInfoSeq
      >
    CommonStatusInfoSeq_out;

  class  CommonStatusInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            CommonStatusInfo
          >
  {
  public:
    CommonStatusInfoSeq (void);
    CommonStatusInfoSeq ( ::CORBA::ULong max);
    CommonStatusInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CommonStatusInfo* buffer, 
      ::CORBA::Boolean release = false);
    CommonStatusInfoSeq (const CommonStatusInfoSeq &);
    virtual ~CommonStatusInfoSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CommonStatusInfoSeq_var _var_type;
    typedef CommonStatusInfoSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct CardStatusInfo;

  typedef
    ::TAO_Var_Var_T<
        CardStatusInfo
      >
    CardStatusInfo_var;
  
  typedef
    ::TAO_Out_T<
        CardStatusInfo
      >
    CardStatusInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  CardStatusInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardStatusInfo_var _var_type;
    typedef CardStatusInfo_out _out_type;
    
    ::CORBA::Short cardID;
    autoTest::CommonStatusInfo cardStatus;
    autoTest::CommonStatusInfoSeq channelStatusInfos;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_CARDSTATUSINFOSEQ_CH_)
#define _AUTOTEST_CARDSTATUSINFOSEQ_CH_

  class CardStatusInfoSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        CardStatusInfoSeq
      >
    CardStatusInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        CardStatusInfoSeq
      >
    CardStatusInfoSeq_out;

  class  CardStatusInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            CardStatusInfo
          >
  {
  public:
    CardStatusInfoSeq (void);
    CardStatusInfoSeq ( ::CORBA::ULong max);
    CardStatusInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      CardStatusInfo* buffer, 
      ::CORBA::Boolean release = false);
    CardStatusInfoSeq (const CardStatusInfoSeq &);
    virtual ~CardStatusInfoSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef CardStatusInfoSeq_var _var_type;
    typedef CardStatusInfoSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct StatusInfo;

  typedef
    ::TAO_Var_Var_T<
        StatusInfo
      >
    StatusInfo_var;
  
  typedef
    ::TAO_Out_T<
        StatusInfo
      >
    StatusInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  StatusInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef StatusInfo_var _var_type;
    typedef StatusInfo_out _out_type;
    
    autoTest::CommonStatusInfo targetStatus;
    autoTest::CardStatusInfoSeq cardStatusInfos;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct ExecutiveInfo;

  typedef
    ::TAO_Var_Var_T<
        ExecutiveInfo
      >
    ExecutiveInfo_var;
  
  typedef
    ::TAO_Out_T<
        ExecutiveInfo
      >
    ExecutiveInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  ExecutiveInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ExecutiveInfo_var _var_type;
    typedef ExecutiveInfo_out _out_type;
    
    ::TAO::String_Manager preCaseID;
    ::TAO::String_Manager preStepID;
    ::CORBA::Long caseRunTimes;
    ::CORBA::Long successNum;
    ::CORBA::Long failNum;
    autoTest::CaseStepStatusE runStatus;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct RecordInfo;

  typedef
    ::TAO_Var_Var_T<
        RecordInfo
      >
    RecordInfo_var;
  
  typedef
    ::TAO_Out_T<
        RecordInfo
      >
    RecordInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  RecordInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef RecordInfo_var _var_type;
    typedef RecordInfo_out _out_type;
    
    ::TAO::String_Manager icdID;
    autoTest::TY_HI_TIME startTime;
    autoTest::TY_HI_TIME stopTime;
    ::CORBA::Long dataType;
    ::CORBA::Long dataCount;
    ::CORBA::Long dataLength;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_RECORDINFOSEQ_CH_)
#define _AUTOTEST_RECORDINFOSEQ_CH_

  class RecordInfoSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        RecordInfoSeq
      >
    RecordInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        RecordInfoSeq
      >
    RecordInfoSeq_out;

  class  RecordInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            RecordInfo
          >
  {
  public:
    RecordInfoSeq (void);
    RecordInfoSeq ( ::CORBA::ULong max);
    RecordInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      RecordInfo* buffer, 
      ::CORBA::Boolean release = false);
    RecordInfoSeq (const RecordInfoSeq &);
    virtual ~RecordInfoSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef RecordInfoSeq_var _var_type;
    typedef RecordInfoSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_FIELDIDSEQ_CH_)
#define _AUTOTEST_FIELDIDSEQ_CH_

  class fieldIDSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        fieldIDSeq
      >
    fieldIDSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        fieldIDSeq
      >
    fieldIDSeq_out;

  class  fieldIDSeq
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    fieldIDSeq (void);
    fieldIDSeq ( ::CORBA::ULong max);
    fieldIDSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer, 
      ::CORBA::Boolean release = false);
    fieldIDSeq (const fieldIDSeq &);
    virtual ~fieldIDSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef fieldIDSeq_var _var_type;
    typedef fieldIDSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct FieldIcdInfo;

  typedef
    ::TAO_Var_Var_T<
        FieldIcdInfo
      >
    FieldIcdInfo_var;
  
  typedef
    ::TAO_Out_T<
        FieldIcdInfo
      >
    FieldIcdInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  FieldIcdInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef FieldIcdInfo_var _var_type;
    typedef FieldIcdInfo_out _out_type;
    
    autoTest::fieldIDSeq fieldID;
    ::CORBA::Long fieldNum;
    ::TAO::String_Manager ICDID;
    ::TAO::String_Manager caseID;
    ::CORBA::Long cardID;
    ::CORBA::Long channelID;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct ModelInfo;

  typedef
    ::TAO_Var_Var_T<
        ModelInfo
      >
    ModelInfo_var;
  
  typedef
    ::TAO_Out_T<
        ModelInfo
      >
    ModelInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  ModelInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ModelInfo_var _var_type;
    typedef ModelInfo_out _out_type;
    
    ::TAO::String_Manager modelName;
    autoTest::fieldIDSeq varName;
    ::CORBA::Long varNum;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct RecordList;

  typedef
    ::TAO_Var_Var_T<
        RecordList
      >
    RecordList_var;
  
  typedef
    ::TAO_Out_T<
        RecordList
      >
    RecordList_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  RecordList
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef RecordList_var _var_type;
    typedef RecordList_out _out_type;
    
    ::TAO::String_Manager name;
    ::TAO::String_Manager path;
    autoTest::TY_HI_TIME startTime;
    autoTest::TY_HI_TIME stopTime;
    ::CORBA::Long dataCount;
    ::CORBA::Long dataLength;
    autoTest::RecordInfoSeq icdInfo;
    ::CORBA::Long icdCount;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_RECORDLISTSEQ_CH_)
#define _AUTOTEST_RECORDLISTSEQ_CH_

  class RecordListSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        RecordListSeq
      >
    RecordListSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        RecordListSeq
      >
    RecordListSeq_out;

  class  RecordListSeq
    : public
        ::TAO::unbounded_value_sequence<
            RecordList
          >
  {
  public:
    RecordListSeq (void);
    RecordListSeq ( ::CORBA::ULong max);
    RecordListSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      RecordList* buffer, 
      ::CORBA::Boolean release = false);
    RecordListSeq (const RecordListSeq &);
    virtual ~RecordListSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef RecordListSeq_var _var_type;
    typedef RecordListSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_PAYLOAD_CH_)
#define _AUTOTEST_PAYLOAD_CH_

  class Payload;

  typedef
    ::TAO_FixedSeq_Var_T<
        Payload
      >
    Payload_var;

  typedef
    ::TAO_Seq_Out_T<
        Payload
      >
    Payload_out;

  class  Payload
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Double
          >
  {
  public:
    Payload (void);
    Payload ( ::CORBA::ULong max);
    Payload (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Double* buffer, 
      ::CORBA::Boolean release = false);
    Payload (const Payload &);
    virtual ~Payload (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef Payload_var _var_type;
    typedef Payload_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct StorageData;

  typedef
    ::TAO_Var_Var_T<
        StorageData
      >
    StorageData_var;
  
  typedef
    ::TAO_Out_T<
        StorageData
      >
    StorageData_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  StorageData
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef StorageData_var _var_type;
    typedef StorageData_out _out_type;
    
    autoTest::Payload data;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_STORAGEDATASEQ_CH_)
#define _AUTOTEST_STORAGEDATASEQ_CH_

  class StorageDataSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        StorageDataSeq
      >
    StorageDataSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        StorageDataSeq
      >
    StorageDataSeq_out;

  class  StorageDataSeq
    : public
        ::TAO::unbounded_value_sequence<
            StorageData
          >
  {
  public:
    StorageDataSeq (void);
    StorageDataSeq ( ::CORBA::ULong max);
    StorageDataSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      StorageData* buffer, 
      ::CORBA::Boolean release = false);
    StorageDataSeq (const StorageDataSeq &);
    virtual ~StorageDataSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef StorageDataSeq_var _var_type;
    typedef StorageDataSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_HITIMESEQ_CH_)
#define _AUTOTEST_HITIMESEQ_CH_

  class HiTimeSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        HiTimeSeq
      >
    HiTimeSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        HiTimeSeq
      >
    HiTimeSeq_out;

  class  HiTimeSeq
    : public
        ::TAO::unbounded_value_sequence<
            TY_HI_TIME
          >
  {
  public:
    HiTimeSeq (void);
    HiTimeSeq ( ::CORBA::ULong max);
    HiTimeSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      TY_HI_TIME* buffer, 
      ::CORBA::Boolean release = false);
    HiTimeSeq (const HiTimeSeq &);
    virtual ~HiTimeSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef HiTimeSeq_var _var_type;
    typedef HiTimeSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_SQFIELDID_CH_)
#define _AUTOTEST_SQFIELDID_CH_

  class SqFieldID;

  typedef
    ::TAO_VarSeq_Var_T<
        SqFieldID
      >
    SqFieldID_var;

  typedef
    ::TAO_Seq_Out_T<
        SqFieldID
      >
    SqFieldID_out;

  class  SqFieldID
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    SqFieldID (void);
    SqFieldID ( ::CORBA::ULong max);
    SqFieldID (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer, 
      ::CORBA::Boolean release = false);
    SqFieldID (const SqFieldID &);
    virtual ~SqFieldID (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef SqFieldID_var _var_type;
    typedef SqFieldID_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_ICDDATA_CH_)
#define _AUTOTEST_ICDDATA_CH_

  class IcdData;

  typedef
    ::TAO_FixedSeq_Var_T<
        IcdData
      >
    IcdData_var;

  typedef
    ::TAO_Seq_Out_T<
        IcdData
      >
    IcdData_out;

  class  IcdData
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Double
          >
  {
  public:
    IcdData (void);
    IcdData ( ::CORBA::ULong max);
    IcdData (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Double* buffer, 
      ::CORBA::Boolean release = false);
    IcdData (const IcdData &);
    virtual ~IcdData (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef IcdData_var _var_type;
    typedef IcdData_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct GetIcdInfo;

  typedef
    ::TAO_Var_Var_T<
        GetIcdInfo
      >
    GetIcdInfo_var;
  
  typedef
    ::TAO_Out_T<
        GetIcdInfo
      >
    GetIcdInfo_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  GetIcdInfo
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef GetIcdInfo_var _var_type;
    typedef GetIcdInfo_out _out_type;
    
    ::TAO::String_Manager icdID;
    autoTest::SqFieldID fieldID;
    ::TAO::String_Manager cardType;
    ::CORBA::Short cardID;
    ::CORBA::Short fieldNum;
    autoTest::IcdData data;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_TYGETICDINFO_CH_)
#define _AUTOTEST_TYGETICDINFO_CH_

  class TyGetIcdInfo;

  typedef
    ::TAO_VarSeq_Var_T<
        TyGetIcdInfo
      >
    TyGetIcdInfo_var;

  typedef
    ::TAO_Seq_Out_T<
        TyGetIcdInfo
      >
    TyGetIcdInfo_out;

  class  TyGetIcdInfo
    : public
        ::TAO::unbounded_value_sequence<
            GetIcdInfo
          >
  {
  public:
    TyGetIcdInfo (void);
    TyGetIcdInfo ( ::CORBA::ULong max);
    TyGetIcdInfo (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      GetIcdInfo* buffer, 
      ::CORBA::Boolean release = false);
    TyGetIcdInfo (const TyGetIcdInfo &);
    virtual ~TyGetIcdInfo (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef TyGetIcdInfo_var _var_type;
    typedef TyGetIcdInfo_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct send_icd_info;

  typedef
    ::TAO_Var_Var_T<
        send_icd_info
      >
    send_icd_info_var;
  
  typedef
    ::TAO_Out_T<
        send_icd_info
      >
    send_icd_info_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  send_icd_info
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef send_icd_info_var _var_type;
    typedef send_icd_info_out _out_type;
    
    ::TAO::String_Manager icdID;
    ::TAO::String_Manager cardType;
    ::CORBA::Short cardID;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_TYSENDICDINFO_CH_)
#define _AUTOTEST_TYSENDICDINFO_CH_

  class TySendIcdInfo;

  typedef
    ::TAO_VarSeq_Var_T<
        TySendIcdInfo
      >
    TySendIcdInfo_var;

  typedef
    ::TAO_Seq_Out_T<
        TySendIcdInfo
      >
    TySendIcdInfo_out;

  class  TySendIcdInfo
    : public
        ::TAO::unbounded_value_sequence<
            send_icd_info
          >
  {
  public:
    TySendIcdInfo (void);
    TySendIcdInfo ( ::CORBA::ULong max);
    TySendIcdInfo (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      send_icd_info* buffer, 
      ::CORBA::Boolean release = false);
    TySendIcdInfo (const TySendIcdInfo &);
    virtual ~TySendIcdInfo (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef TySendIcdInfo_var _var_type;
    typedef TySendIcdInfo_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_SQFULLPATH_CH_)
#define _AUTOTEST_SQFULLPATH_CH_

  class SqFullPath;

  typedef
    ::TAO_VarSeq_Var_T<
        SqFullPath
      >
    SqFullPath_var;

  typedef
    ::TAO_Seq_Out_T<
        SqFullPath
      >
    SqFullPath_out;

  class  SqFullPath
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    SqFullPath (void);
    SqFullPath ( ::CORBA::ULong max);
    SqFullPath (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer, 
      ::CORBA::Boolean release = false);
    SqFullPath (const SqFullPath &);
    virtual ~SqFullPath (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef SqFullPath_var _var_type;
    typedef SqFullPath_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_MODEDATA_CH_)
#define _AUTOTEST_MODEDATA_CH_

  class ModeData;

  typedef
    ::TAO_FixedSeq_Var_T<
        ModeData
      >
    ModeData_var;

  typedef
    ::TAO_Seq_Out_T<
        ModeData
      >
    ModeData_out;

  class  ModeData
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Double
          >
  {
  public:
    ModeData (void);
    ModeData ( ::CORBA::ULong max);
    ModeData (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Double* buffer, 
      ::CORBA::Boolean release = false);
    ModeData (const ModeData &);
    virtual ~ModeData (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef ModeData_var _var_type;
    typedef ModeData_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct model_info;

  typedef
    ::TAO_Var_Var_T<
        model_info
      >
    model_info_var;
  
  typedef
    ::TAO_Out_T<
        model_info
      >
    model_info_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  model_info
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef model_info_var _var_type;
    typedef model_info_out _out_type;
    
    ::TAO::String_Manager modelName;
    autoTest::SqFullPath fullPath;
    autoTest::ModeData data;
    ::CORBA::Short num;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:509

  typedef model_info TY_MODEL_INFO;
  typedef model_info_var TY_MODEL_INFO_var;
  typedef model_info_out TY_MODEL_INFO_out;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_TYMODELINFO_CH_)
#define _AUTOTEST_TYMODELINFO_CH_

  class TyModelInfo;

  typedef
    ::TAO_VarSeq_Var_T<
        TyModelInfo
      >
    TyModelInfo_var;

  typedef
    ::TAO_Seq_Out_T<
        TyModelInfo
      >
    TyModelInfo_out;

  class  TyModelInfo
    : public
        ::TAO::unbounded_value_sequence<
            TY_MODEL_INFO
          >
  {
  public:
    TyModelInfo (void);
    TyModelInfo ( ::CORBA::ULong max);
    TyModelInfo (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      TY_MODEL_INFO* buffer, 
      ::CORBA::Boolean release = false);
    TyModelInfo (const TyModelInfo &);
    virtual ~TyModelInfo (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef TyModelInfo_var _var_type;
    typedef TyModelInfo_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct set_icd_info;

  typedef
    ::TAO_Var_Var_T<
        set_icd_info
      >
    set_icd_info_var;
  
  typedef
    ::TAO_Out_T<
        set_icd_info
      >
    set_icd_info_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  set_icd_info
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef set_icd_info_var _var_type;
    typedef set_icd_info_out _out_type;
    
    ::TAO::String_Manager icdID;
    autoTest::SqFieldID fieldID;
    autoTest::IcdData data;
    ::CORBA::Short fieldNum;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:509

  typedef set_icd_info TY_SET_ICD_INFO;
  typedef set_icd_info_var TY_SET_ICD_INFO_var;
  typedef set_icd_info_out TY_SET_ICD_INFO_out;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_TYSETICDINFO_CH_)
#define _AUTOTEST_TYSETICDINFO_CH_

  class TySetIcdInfo;

  typedef
    ::TAO_VarSeq_Var_T<
        TySetIcdInfo
      >
    TySetIcdInfo_var;

  typedef
    ::TAO_Seq_Out_T<
        TySetIcdInfo
      >
    TySetIcdInfo_out;

  class  TySetIcdInfo
    : public
        ::TAO::unbounded_value_sequence<
            TY_SET_ICD_INFO
          >
  {
  public:
    TySetIcdInfo (void);
    TySetIcdInfo ( ::CORBA::ULong max);
    TySetIcdInfo (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      TY_SET_ICD_INFO* buffer, 
      ::CORBA::Boolean release = false);
    TySetIcdInfo (const TySetIcdInfo &);
    virtual ~TySetIcdInfo (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef TySetIcdInfo_var _var_type;
    typedef TySetIcdInfo_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:260

  struct step_info;

  typedef
    ::TAO_Var_Var_T<
        step_info
      >
    step_info_var;
  
  typedef
    ::TAO_Out_T<
        step_info
      >
    step_info_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:49

  struct  step_info
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef step_info_var _var_type;
    typedef step_info_out _out_type;
    
    ::TAO::String_Manager caseID;
    ::TAO::String_Manager stepID;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:509

  typedef step_info TY_STEP_INFO;
  typedef step_info_var TY_STEP_INFO_var;
  typedef step_info_out TY_STEP_INFO_out;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:100

#if !defined (_AUTOTEST_STEPINFOSEQ_CH_)
#define _AUTOTEST_STEPINFOSEQ_CH_

  class StepInfoSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        StepInfoSeq
      >
    StepInfoSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        StepInfoSeq
      >
    StepInfoSeq_out;

  class  StepInfoSeq
    : public
        ::TAO::unbounded_value_sequence<
            TY_STEP_INFO
          >
  {
  public:
    StepInfoSeq (void);
    StepInfoSeq ( ::CORBA::ULong max);
    StepInfoSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      TY_STEP_INFO* buffer, 
      ::CORBA::Boolean release = false);
    StepInfoSeq (const StepInfoSeq &);
    virtual ~StepInfoSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef StepInfoSeq_var _var_type;
    typedef StepInfoSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_interface.cpp:784

#if !defined (_AUTOTEST_HIAUTOTEST__VAR_OUT_CH_)
#define _AUTOTEST_HIAUTOTEST__VAR_OUT_CH_

  class HiAutoTest;
  typedef HiAutoTest *HiAutoTest_ptr;

  typedef
    TAO_Objref_Var_T<
        HiAutoTest
      >
    HiAutoTest_var;
  
  typedef
    TAO_Objref_Out_T<
        HiAutoTest
      >
    HiAutoTest_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:45

  class  HiAutoTest
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<HiAutoTest>;

    // TAO_IDL - Generated from
    // be/be_type.cpp:306
    
    typedef HiAutoTest_ptr _ptr_type;
    typedef HiAutoTest_var _var_type;
    typedef HiAutoTest_out _out_type;

    // The static operations.
    static HiAutoTest_ptr _duplicate (HiAutoTest_ptr obj);

    static void _tao_release (HiAutoTest_ptr obj);

    static HiAutoTest_ptr _narrow (::CORBA::Object_ptr obj);
    static HiAutoTest_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static HiAutoTest_ptr _nil (void);

    virtual ::autoTest::ReturnInfo startManualTest (void);

    virtual ::autoTest::ReturnInfo stopManualTest (void);

    virtual ::autoTest::ReturnInfo startModel (const char * pData);

    virtual ::autoTest::ReturnInfo stopModel (const char * modelName);

    virtual ::autoTest::ReturnInfo getModelRunStatus (const char * modelName,
    ::CORBA::Long_out modelStatus);

    virtual ::autoTest::ReturnInfo setICDData (const ::autoTest::TySetIcdInfo & icdInfo,
    ::CORBA::Long icdNum);

    virtual ::autoTest::ReturnInfo sendICDData (const ::autoTest::TySendIcdInfo & icdInfo,
    ::CORBA::Long icdNum);

    virtual ::autoTest::ReturnInfo getICDData (const ::autoTest::TyGetIcdInfo & icdInfoIn,
    ::autoTest::TyGetIcdInfo_out icdInfo,
    ::CORBA::Long icdNum);

    virtual ::autoTest::ReturnInfo getModelParam (const ::autoTest::TyModelInfo & modelInfoIn,
    ::autoTest::TyModelInfo_out modelInfo,
    ::CORBA::Long modelNum);

    virtual ::autoTest::ReturnInfo setModelParam (const ::autoTest::TyModelInfo & modelInfo,
    ::CORBA::Long modelNum);

    virtual ::autoTest::ReturnInfo getModelVar (const ::autoTest::TyModelInfo & modelInfoIn,
    ::autoTest::TyModelInfo_out modelInfo,
    ::CORBA::Long modelNum);

    virtual ::autoTest::ReturnInfo setModelVar (const ::autoTest::TyModelInfo & modelInfo,
    ::CORBA::Long modelNum);

    virtual ::autoTest::ReturnInfo optManualTestOneStep (const char * oneStep,
    ::autoTest::StepStatusSeq_out info);

    virtual ::autoTest::ReturnInfo setCase (const char * caseData);

    virtual ::autoTest::ReturnInfo setICD (const char * ICDInfo);

    virtual ::autoTest::ReturnInfo setChannelConfig (const char * channelConfig);

    virtual ::autoTest::ReturnInfo setCurveConfig (const char * curveInfo);

    virtual ::autoTest::ReturnInfo start (const ::autoTest::TestExecute & testExecute);

    virtual ::autoTest::ReturnInfo pause (void);

    virtual ::autoTest::ReturnInfo stop (void);

    virtual ::autoTest::ReturnInfo stopStep (const ::autoTest::StepInfoSeq & stepInfo);

    virtual ::autoTest::ReturnInfo getCaseStatus (const ::autoTest::CaseStatusSeq & cardStatusDess,
    ::autoTest::CaseStatusSeq_out cardStatusVals);

    virtual ::autoTest::ReturnInfo getStepStatus (const ::autoTest::StepStatusSeq & stepStatusDess,
    ::autoTest::StepStatusSeq_out stepStatusVals);

    virtual ::autoTest::ReturnInfo getSubStepStatus (const ::autoTest::SubStepStatusSeq & subStepStatusDess,
    ::autoTest::SubStepStatusSeq_out subStepStatusVals);

    virtual ::autoTest::ReturnInfo getFieldData (const ::autoTest::FieldData & fieldDataDess,
    ::autoTest::FieldData_out fieldDataVals);

    virtual ::autoTest::ReturnInfo getCardsInfo (::autoTest::CardManagerSeq_out info);

    virtual ::autoTest::ReturnInfo getServerStatus (::autoTest::StatusInfo_out info);

    virtual ::autoTest::ReturnInfo getExecutiveInfo (::autoTest::ExecutiveInfo_out info);

    virtual ::autoTest::ReturnInfo setStorageConfig (const char * storageInfo);

    virtual ::autoTest::ReturnInfo getRecordListNum (::CORBA::Long_out listNum);

    virtual ::autoTest::ReturnInfo getRecordList (::autoTest::RecordListSeq_out pList,
    ::CORBA::Long_out listLen);

    virtual ::autoTest::ReturnInfo getDataByTime (const char * storageName,
    const ::autoTest::FieldIcdInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount);

    virtual ::autoTest::ReturnInfo getDataByIndex (const char * storageName,
    const ::autoTest::FieldIcdInfo & varInfo,
    ::CORBA::Long startIndex,
    ::CORBA::Long stopIndex,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount);

    virtual ::autoTest::ReturnInfo getIndexByTime (const char * storageName,
    const ::autoTest::FieldIcdInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::CORBA::Long_out startIndex,
    ::CORBA::Long_out stopIndex);

    virtual ::autoTest::ReturnInfo deleteStorageRecord (const char * storageName);

    virtual ::autoTest::ReturnInfo deleteAllStorageRecord (void);

    virtual ::autoTest::ReturnInfo getModelDataByTime (const char * storageName,
    const ::autoTest::ModelInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount);

    virtual ::autoTest::ReturnInfo getModelDataByIndex (const char * storageName,
    const ::autoTest::ModelInfo & varInfo,
    ::CORBA::Long startIndex,
    ::CORBA::Long stopIndex,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount);

    virtual ::autoTest::ReturnInfo getModelIndexByTime (const char * storageName,
    const ::autoTest::ModelInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::CORBA::Long_out startIndex,
    ::CORBA::Long_out stopIndex);

    virtual ::autoTest::ReturnInfo getIpInfo (::CORBA::String_out ipInfo);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:156

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    HiAutoTest (void);

    // Concrete non-local interface only.
    HiAutoTest (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    HiAutoTest (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~HiAutoTest (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    HiAutoTest (const HiAutoTest &);

    void operator= (const HiAutoTest &);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:70

} // module autoTest

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:184

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:60

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_AUTOTEST_HIAUTOTEST__TRAITS_)
#define _AUTOTEST_HIAUTOTEST__TRAITS_

  template<>
  struct  Objref_Traits< ::autoTest::HiAutoTest>
  {
    static ::autoTest::HiAutoTest_ptr duplicate (
        ::autoTest::HiAutoTest_ptr p);
    static void release (
        ::autoTest::HiAutoTest_ptr p);
    static ::autoTest::HiAutoTest_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::autoTest::HiAutoTest_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::Parameter &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::Parameter &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_ParameterSeq_H_
#define _TAO_CDR_OP_autoTest_ParameterSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ParameterSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ParameterSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_ParameterSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::ChannelPara &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::ChannelPara &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_ChannelParaSeq_H_
#define _TAO_CDR_OP_autoTest_ChannelParaSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ChannelParaSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ChannelParaSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_ChannelParaSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CardPara &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CardPara &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CardParaSeq_H_
#define _TAO_CDR_OP_autoTest_CardParaSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardParaSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardParaSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CardParaSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CardManagerPara &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CardManagerPara &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CardManagerSeq_H_
#define _TAO_CDR_OP_autoTest_CardManagerSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardManagerSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardManagerSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CardManagerSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::TY_HI_TIME &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::TY_HI_TIME &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::ReturnInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::ReturnInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, autoTest::CaseStepStatusE _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, autoTest::CaseStepStatusE &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:40


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, autoTest::ServerRunStatusE _tao_enumerator);
 ::CORBA::Boolean operator>> (TAO_InputCDR &strm, autoTest::ServerRunStatusE &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CaseExecute &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CaseExecute &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CaseExecuteSeq_H_
#define _TAO_CDR_OP_autoTest_CaseExecuteSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CaseExecuteSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CaseExecuteSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CaseExecuteSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::TestExecute &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::TestExecute &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CaseStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CaseStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CaseStatusSeq_H_
#define _TAO_CDR_OP_autoTest_CaseStatusSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CaseStatusSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CaseStatusSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CaseStatusSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::StepStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::StepStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_StepStatusSeq_H_
#define _TAO_CDR_OP_autoTest_StepStatusSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StepStatusSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StepStatusSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_StepStatusSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::SubStepStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::SubStepStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_SubStepStatusSeq_H_
#define _TAO_CDR_OP_autoTest_SubStepStatusSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SubStepStatusSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SubStepStatusSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_SubStepStatusSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::FieldData &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::FieldData &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CardStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CardStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CardStatusSeq_H_
#define _TAO_CDR_OP_autoTest_CardStatusSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardStatusSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardStatusSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CardStatusSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::ServerStatus &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::ServerStatus &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CommonStatusInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CommonStatusInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CommonStatusInfoSeq_H_
#define _TAO_CDR_OP_autoTest_CommonStatusInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CommonStatusInfoSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CommonStatusInfoSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CommonStatusInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::CardStatusInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::CardStatusInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_CardStatusInfoSeq_H_
#define _TAO_CDR_OP_autoTest_CardStatusInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardStatusInfoSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardStatusInfoSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_CardStatusInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::StatusInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::StatusInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::ExecutiveInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::ExecutiveInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::RecordInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::RecordInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_RecordInfoSeq_H_
#define _TAO_CDR_OP_autoTest_RecordInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::RecordInfoSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::RecordInfoSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_RecordInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_fieldIDSeq_H_
#define _TAO_CDR_OP_autoTest_fieldIDSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::fieldIDSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::fieldIDSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_fieldIDSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::FieldIcdInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::FieldIcdInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::ModelInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::ModelInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::RecordList &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::RecordList &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_RecordListSeq_H_
#define _TAO_CDR_OP_autoTest_RecordListSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::RecordListSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::RecordListSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_RecordListSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_Payload_H_
#define _TAO_CDR_OP_autoTest_Payload_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::Payload &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::Payload &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_Payload_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::StorageData &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::StorageData &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_StorageDataSeq_H_
#define _TAO_CDR_OP_autoTest_StorageDataSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StorageDataSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StorageDataSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_StorageDataSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_HiTimeSeq_H_
#define _TAO_CDR_OP_autoTest_HiTimeSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::HiTimeSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::HiTimeSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_HiTimeSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_SqFieldID_H_
#define _TAO_CDR_OP_autoTest_SqFieldID_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SqFieldID &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SqFieldID &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_SqFieldID_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_IcdData_H_
#define _TAO_CDR_OP_autoTest_IcdData_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::IcdData &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::IcdData &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_IcdData_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::GetIcdInfo &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::GetIcdInfo &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_TyGetIcdInfo_H_
#define _TAO_CDR_OP_autoTest_TyGetIcdInfo_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TyGetIcdInfo &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TyGetIcdInfo &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_TyGetIcdInfo_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::send_icd_info &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::send_icd_info &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_TySendIcdInfo_H_
#define _TAO_CDR_OP_autoTest_TySendIcdInfo_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TySendIcdInfo &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TySendIcdInfo &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_TySendIcdInfo_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_SqFullPath_H_
#define _TAO_CDR_OP_autoTest_SqFullPath_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SqFullPath &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SqFullPath &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_SqFullPath_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_ModeData_H_
#define _TAO_CDR_OP_autoTest_ModeData_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ModeData &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ModeData &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_ModeData_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::model_info &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::model_info &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_TyModelInfo_H_
#define _TAO_CDR_OP_autoTest_TyModelInfo_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TyModelInfo &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TyModelInfo &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_TyModelInfo_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::set_icd_info &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::set_icd_info &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_TySetIcdInfo_H_
#define _TAO_CDR_OP_autoTest_TySetIcdInfo_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TySetIcdInfo &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TySetIcdInfo &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_TySetIcdInfo_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:45


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::step_info &);
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::step_info &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:61

#if !defined _TAO_CDR_OP_autoTest_StepInfoSeq_H_
#define _TAO_CDR_OP_autoTest_StepInfoSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


 ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StepInfoSeq &_tao_sequence
  );
 ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StepInfoSeq &_tao_sequence
  );

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_autoTest_StepInfoSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:47

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

 ::CORBA::Boolean operator<< (TAO_OutputCDR &, const autoTest::HiAutoTest_ptr );
 ::CORBA::Boolean operator>> (TAO_InputCDR &, autoTest::HiAutoTest_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1589
#if defined (__ACE_INLINE__)
#include "HiAutoTestServerC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

