// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:363


#include "HiAutoTestServerC.h"
#include "tao/CDR.h"
#include "tao/Exception_Data.h"
#include "tao/Invocation_Adapter.h"
#include "tao/Object_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Var_Size_Argument_T.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "HiAutoTestServerC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_CARDMANAGERSEQ__ARG_TRAITS_)
#define _AUTOTEST_CARDMANAGERSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::CardManagerSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::CardManagerSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_TY_HI_TIME__ARG_TRAITS_)
#define _AUTOTEST_TY_HI_TIME__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::TY_HI_TIME>
    : public
        Fixed_Size_Arg_Traits_T<
            autoTest::TY_HI_TIME,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_RETURNINFO__ARG_TRAITS_)
#define _AUTOTEST_RETURNINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::ReturnInfo>
    : public
        Fixed_Size_Arg_Traits_T<
            autoTest::ReturnInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_TESTEXECUTE__ARG_TRAITS_)
#define _AUTOTEST_TESTEXECUTE__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::TestExecute>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::TestExecute,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_CASESTATUSSEQ__ARG_TRAITS_)
#define _AUTOTEST_CASESTATUSSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::CaseStatusSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::CaseStatusSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_STEPSTATUSSEQ__ARG_TRAITS_)
#define _AUTOTEST_STEPSTATUSSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::StepStatusSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::StepStatusSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_SUBSTEPSTATUSSEQ__ARG_TRAITS_)
#define _AUTOTEST_SUBSTEPSTATUSSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::SubStepStatusSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::SubStepStatusSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_FIELDDATA__ARG_TRAITS_)
#define _AUTOTEST_FIELDDATA__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::FieldData>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::FieldData,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_STATUSINFO__ARG_TRAITS_)
#define _AUTOTEST_STATUSINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::StatusInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::StatusInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_EXECUTIVEINFO__ARG_TRAITS_)
#define _AUTOTEST_EXECUTIVEINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::ExecutiveInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::ExecutiveInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_FIELDICDINFO__ARG_TRAITS_)
#define _AUTOTEST_FIELDICDINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::FieldIcdInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::FieldIcdInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:861

#if !defined (_AUTOTEST_MODELINFO__ARG_TRAITS_)
#define _AUTOTEST_MODELINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::ModelInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::ModelInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_RECORDLISTSEQ__ARG_TRAITS_)
#define _AUTOTEST_RECORDLISTSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::RecordListSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::RecordListSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_STORAGEDATASEQ__ARG_TRAITS_)
#define _AUTOTEST_STORAGEDATASEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::StorageDataSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::StorageDataSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_HITIMESEQ__ARG_TRAITS_)
#define _AUTOTEST_HITIMESEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::HiTimeSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::HiTimeSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_TYGETICDINFO__ARG_TRAITS_)
#define _AUTOTEST_TYGETICDINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::TyGetIcdInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::TyGetIcdInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_TYSENDICDINFO__ARG_TRAITS_)
#define _AUTOTEST_TYSENDICDINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::TySendIcdInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::TySendIcdInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_TYMODELINFO__ARG_TRAITS_)
#define _AUTOTEST_TYMODELINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::TyModelInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::TyModelInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_TYSETICDINFO__ARG_TRAITS_)
#define _AUTOTEST_TYSETICDINFO__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::TySetIcdInfo>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::TySetIcdInfo,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:607

#if !defined (_AUTOTEST_STEPINFOSEQ__ARG_TRAITS_)
#define _AUTOTEST_STEPINFOSEQ__ARG_TRAITS_

  template<>
  class Arg_Traits<autoTest::StepInfoSeq>
    : public
        Var_Size_Arg_Traits_T<
            autoTest::StepInfoSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_PARAMETERSEQ_CS_)
#define _AUTOTEST_PARAMETERSEQ_CS_

autoTest::ParameterSeq::ParameterSeq (void)
{}

autoTest::ParameterSeq::ParameterSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        Parameter
      > (max)
{}

autoTest::ParameterSeq::ParameterSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::Parameter * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        Parameter
      >
    (max, length, buffer, release)
{}

autoTest::ParameterSeq::ParameterSeq (
    const ParameterSeq &seq)
  : ::TAO::unbounded_value_sequence<
        Parameter
      > (seq)
{}

autoTest::ParameterSeq::~ParameterSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CHANNELPARASEQ_CS_)
#define _AUTOTEST_CHANNELPARASEQ_CS_

autoTest::ChannelParaSeq::ChannelParaSeq (void)
{}

autoTest::ChannelParaSeq::ChannelParaSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ChannelPara
      > (max)
{}

autoTest::ChannelParaSeq::ChannelParaSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::ChannelPara * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ChannelPara
      >
    (max, length, buffer, release)
{}

autoTest::ChannelParaSeq::ChannelParaSeq (
    const ChannelParaSeq &seq)
  : ::TAO::unbounded_value_sequence<
        ChannelPara
      > (seq)
{}

autoTest::ChannelParaSeq::~ChannelParaSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CARDPARASEQ_CS_)
#define _AUTOTEST_CARDPARASEQ_CS_

autoTest::CardParaSeq::CardParaSeq (void)
{}

autoTest::CardParaSeq::CardParaSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CardPara
      > (max)
{}

autoTest::CardParaSeq::CardParaSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CardPara * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CardPara
      >
    (max, length, buffer, release)
{}

autoTest::CardParaSeq::CardParaSeq (
    const CardParaSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CardPara
      > (seq)
{}

autoTest::CardParaSeq::~CardParaSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CARDMANAGERSEQ_CS_)
#define _AUTOTEST_CARDMANAGERSEQ_CS_

autoTest::CardManagerSeq::CardManagerSeq (void)
{}

autoTest::CardManagerSeq::CardManagerSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CardManagerPara
      > (max)
{}

autoTest::CardManagerSeq::CardManagerSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CardManagerPara * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CardManagerPara
      >
    (max, length, buffer, release)
{}

autoTest::CardManagerSeq::CardManagerSeq (
    const CardManagerSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CardManagerPara
      > (seq)
{}

autoTest::CardManagerSeq::~CardManagerSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CASEEXECUTESEQ_CS_)
#define _AUTOTEST_CASEEXECUTESEQ_CS_

autoTest::CaseExecuteSeq::CaseExecuteSeq (void)
{}

autoTest::CaseExecuteSeq::CaseExecuteSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CaseExecute
      > (max)
{}

autoTest::CaseExecuteSeq::CaseExecuteSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CaseExecute * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CaseExecute
      >
    (max, length, buffer, release)
{}

autoTest::CaseExecuteSeq::CaseExecuteSeq (
    const CaseExecuteSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CaseExecute
      > (seq)
{}

autoTest::CaseExecuteSeq::~CaseExecuteSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CASESTATUSSEQ_CS_)
#define _AUTOTEST_CASESTATUSSEQ_CS_

autoTest::CaseStatusSeq::CaseStatusSeq (void)
{}

autoTest::CaseStatusSeq::CaseStatusSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CaseStatus
      > (max)
{}

autoTest::CaseStatusSeq::CaseStatusSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CaseStatus * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CaseStatus
      >
    (max, length, buffer, release)
{}

autoTest::CaseStatusSeq::CaseStatusSeq (
    const CaseStatusSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CaseStatus
      > (seq)
{}

autoTest::CaseStatusSeq::~CaseStatusSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_STEPSTATUSSEQ_CS_)
#define _AUTOTEST_STEPSTATUSSEQ_CS_

autoTest::StepStatusSeq::StepStatusSeq (void)
{}

autoTest::StepStatusSeq::StepStatusSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        StepStatus
      > (max)
{}

autoTest::StepStatusSeq::StepStatusSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::StepStatus * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        StepStatus
      >
    (max, length, buffer, release)
{}

autoTest::StepStatusSeq::StepStatusSeq (
    const StepStatusSeq &seq)
  : ::TAO::unbounded_value_sequence<
        StepStatus
      > (seq)
{}

autoTest::StepStatusSeq::~StepStatusSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_SUBSTEPSTATUSSEQ_CS_)
#define _AUTOTEST_SUBSTEPSTATUSSEQ_CS_

autoTest::SubStepStatusSeq::SubStepStatusSeq (void)
{}

autoTest::SubStepStatusSeq::SubStepStatusSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        SubStepStatus
      > (max)
{}

autoTest::SubStepStatusSeq::SubStepStatusSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::SubStepStatus * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        SubStepStatus
      >
    (max, length, buffer, release)
{}

autoTest::SubStepStatusSeq::SubStepStatusSeq (
    const SubStepStatusSeq &seq)
  : ::TAO::unbounded_value_sequence<
        SubStepStatus
      > (seq)
{}

autoTest::SubStepStatusSeq::~SubStepStatusSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CARDSTATUSSEQ_CS_)
#define _AUTOTEST_CARDSTATUSSEQ_CS_

autoTest::CardStatusSeq::CardStatusSeq (void)
{}

autoTest::CardStatusSeq::CardStatusSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CardStatus
      > (max)
{}

autoTest::CardStatusSeq::CardStatusSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CardStatus * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CardStatus
      >
    (max, length, buffer, release)
{}

autoTest::CardStatusSeq::CardStatusSeq (
    const CardStatusSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CardStatus
      > (seq)
{}

autoTest::CardStatusSeq::~CardStatusSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_COMMONSTATUSINFOSEQ_CS_)
#define _AUTOTEST_COMMONSTATUSINFOSEQ_CS_

autoTest::CommonStatusInfoSeq::CommonStatusInfoSeq (void)
{}

autoTest::CommonStatusInfoSeq::CommonStatusInfoSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CommonStatusInfo
      > (max)
{}

autoTest::CommonStatusInfoSeq::CommonStatusInfoSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CommonStatusInfo * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CommonStatusInfo
      >
    (max, length, buffer, release)
{}

autoTest::CommonStatusInfoSeq::CommonStatusInfoSeq (
    const CommonStatusInfoSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CommonStatusInfo
      > (seq)
{}

autoTest::CommonStatusInfoSeq::~CommonStatusInfoSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_CARDSTATUSINFOSEQ_CS_)
#define _AUTOTEST_CARDSTATUSINFOSEQ_CS_

autoTest::CardStatusInfoSeq::CardStatusInfoSeq (void)
{}

autoTest::CardStatusInfoSeq::CardStatusInfoSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        CardStatusInfo
      > (max)
{}

autoTest::CardStatusInfoSeq::CardStatusInfoSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::CardStatusInfo * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        CardStatusInfo
      >
    (max, length, buffer, release)
{}

autoTest::CardStatusInfoSeq::CardStatusInfoSeq (
    const CardStatusInfoSeq &seq)
  : ::TAO::unbounded_value_sequence<
        CardStatusInfo
      > (seq)
{}

autoTest::CardStatusInfoSeq::~CardStatusInfoSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_RECORDINFOSEQ_CS_)
#define _AUTOTEST_RECORDINFOSEQ_CS_

autoTest::RecordInfoSeq::RecordInfoSeq (void)
{}

autoTest::RecordInfoSeq::RecordInfoSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        RecordInfo
      > (max)
{}

autoTest::RecordInfoSeq::RecordInfoSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::RecordInfo * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        RecordInfo
      >
    (max, length, buffer, release)
{}

autoTest::RecordInfoSeq::RecordInfoSeq (
    const RecordInfoSeq &seq)
  : ::TAO::unbounded_value_sequence<
        RecordInfo
      > (seq)
{}

autoTest::RecordInfoSeq::~RecordInfoSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_FIELDIDSEQ_CS_)
#define _AUTOTEST_FIELDIDSEQ_CS_

autoTest::fieldIDSeq::fieldIDSeq (void)
{}

autoTest::fieldIDSeq::fieldIDSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_basic_string_sequence<char> (max)
{}

autoTest::fieldIDSeq::fieldIDSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Char * * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_basic_string_sequence<char>
    (max, length, buffer, release)
{}

autoTest::fieldIDSeq::fieldIDSeq (
    const fieldIDSeq &seq)
  : ::TAO::unbounded_basic_string_sequence<char> (seq)
{}

autoTest::fieldIDSeq::~fieldIDSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_RECORDLISTSEQ_CS_)
#define _AUTOTEST_RECORDLISTSEQ_CS_

autoTest::RecordListSeq::RecordListSeq (void)
{}

autoTest::RecordListSeq::RecordListSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        RecordList
      > (max)
{}

autoTest::RecordListSeq::RecordListSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::RecordList * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        RecordList
      >
    (max, length, buffer, release)
{}

autoTest::RecordListSeq::RecordListSeq (
    const RecordListSeq &seq)
  : ::TAO::unbounded_value_sequence<
        RecordList
      > (seq)
{}

autoTest::RecordListSeq::~RecordListSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_PAYLOAD_CS_)
#define _AUTOTEST_PAYLOAD_CS_

autoTest::Payload::Payload (void)
{}

autoTest::Payload::Payload (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      > (max)
{}

autoTest::Payload::Payload (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      >
    (max, length, buffer, release)
{}

autoTest::Payload::Payload (
    const Payload &seq)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      > (seq)
{}

autoTest::Payload::~Payload (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_STORAGEDATASEQ_CS_)
#define _AUTOTEST_STORAGEDATASEQ_CS_

autoTest::StorageDataSeq::StorageDataSeq (void)
{}

autoTest::StorageDataSeq::StorageDataSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        StorageData
      > (max)
{}

autoTest::StorageDataSeq::StorageDataSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::StorageData * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        StorageData
      >
    (max, length, buffer, release)
{}

autoTest::StorageDataSeq::StorageDataSeq (
    const StorageDataSeq &seq)
  : ::TAO::unbounded_value_sequence<
        StorageData
      > (seq)
{}

autoTest::StorageDataSeq::~StorageDataSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_HITIMESEQ_CS_)
#define _AUTOTEST_HITIMESEQ_CS_

autoTest::HiTimeSeq::HiTimeSeq (void)
{}

autoTest::HiTimeSeq::HiTimeSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        TY_HI_TIME
      > (max)
{}

autoTest::HiTimeSeq::HiTimeSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::TY_HI_TIME * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        TY_HI_TIME
      >
    (max, length, buffer, release)
{}

autoTest::HiTimeSeq::HiTimeSeq (
    const HiTimeSeq &seq)
  : ::TAO::unbounded_value_sequence<
        TY_HI_TIME
      > (seq)
{}

autoTest::HiTimeSeq::~HiTimeSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_SQFIELDID_CS_)
#define _AUTOTEST_SQFIELDID_CS_

autoTest::SqFieldID::SqFieldID (void)
{}

autoTest::SqFieldID::SqFieldID (
    ::CORBA::ULong max)
  : ::TAO::unbounded_basic_string_sequence<char> (max)
{}

autoTest::SqFieldID::SqFieldID (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Char * * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_basic_string_sequence<char>
    (max, length, buffer, release)
{}

autoTest::SqFieldID::SqFieldID (
    const SqFieldID &seq)
  : ::TAO::unbounded_basic_string_sequence<char> (seq)
{}

autoTest::SqFieldID::~SqFieldID (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_ICDDATA_CS_)
#define _AUTOTEST_ICDDATA_CS_

autoTest::IcdData::IcdData (void)
{}

autoTest::IcdData::IcdData (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      > (max)
{}

autoTest::IcdData::IcdData (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      >
    (max, length, buffer, release)
{}

autoTest::IcdData::IcdData (
    const IcdData &seq)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      > (seq)
{}

autoTest::IcdData::~IcdData (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_TYGETICDINFO_CS_)
#define _AUTOTEST_TYGETICDINFO_CS_

autoTest::TyGetIcdInfo::TyGetIcdInfo (void)
{}

autoTest::TyGetIcdInfo::TyGetIcdInfo (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        GetIcdInfo
      > (max)
{}

autoTest::TyGetIcdInfo::TyGetIcdInfo (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::GetIcdInfo * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        GetIcdInfo
      >
    (max, length, buffer, release)
{}

autoTest::TyGetIcdInfo::TyGetIcdInfo (
    const TyGetIcdInfo &seq)
  : ::TAO::unbounded_value_sequence<
        GetIcdInfo
      > (seq)
{}

autoTest::TyGetIcdInfo::~TyGetIcdInfo (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_TYSENDICDINFO_CS_)
#define _AUTOTEST_TYSENDICDINFO_CS_

autoTest::TySendIcdInfo::TySendIcdInfo (void)
{}

autoTest::TySendIcdInfo::TySendIcdInfo (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        send_icd_info
      > (max)
{}

autoTest::TySendIcdInfo::TySendIcdInfo (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::send_icd_info * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        send_icd_info
      >
    (max, length, buffer, release)
{}

autoTest::TySendIcdInfo::TySendIcdInfo (
    const TySendIcdInfo &seq)
  : ::TAO::unbounded_value_sequence<
        send_icd_info
      > (seq)
{}

autoTest::TySendIcdInfo::~TySendIcdInfo (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_SQFULLPATH_CS_)
#define _AUTOTEST_SQFULLPATH_CS_

autoTest::SqFullPath::SqFullPath (void)
{}

autoTest::SqFullPath::SqFullPath (
    ::CORBA::ULong max)
  : ::TAO::unbounded_basic_string_sequence<char> (max)
{}

autoTest::SqFullPath::SqFullPath (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Char * * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_basic_string_sequence<char>
    (max, length, buffer, release)
{}

autoTest::SqFullPath::SqFullPath (
    const SqFullPath &seq)
  : ::TAO::unbounded_basic_string_sequence<char> (seq)
{}

autoTest::SqFullPath::~SqFullPath (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_MODEDATA_CS_)
#define _AUTOTEST_MODEDATA_CS_

autoTest::ModeData::ModeData (void)
{}

autoTest::ModeData::ModeData (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      > (max)
{}

autoTest::ModeData::ModeData (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    ::CORBA::Double * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      >
    (max, length, buffer, release)
{}

autoTest::ModeData::ModeData (
    const ModeData &seq)
  : ::TAO::unbounded_value_sequence<
        ::CORBA::Double
      > (seq)
{}

autoTest::ModeData::~ModeData (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_TYMODELINFO_CS_)
#define _AUTOTEST_TYMODELINFO_CS_

autoTest::TyModelInfo::TyModelInfo (void)
{}

autoTest::TyModelInfo::TyModelInfo (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        TY_MODEL_INFO
      > (max)
{}

autoTest::TyModelInfo::TyModelInfo (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::TY_MODEL_INFO * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        TY_MODEL_INFO
      >
    (max, length, buffer, release)
{}

autoTest::TyModelInfo::TyModelInfo (
    const TyModelInfo &seq)
  : ::TAO::unbounded_value_sequence<
        TY_MODEL_INFO
      > (seq)
{}

autoTest::TyModelInfo::~TyModelInfo (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_TYSETICDINFO_CS_)
#define _AUTOTEST_TYSETICDINFO_CS_

autoTest::TySetIcdInfo::TySetIcdInfo (void)
{}

autoTest::TySetIcdInfo::TySetIcdInfo (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        TY_SET_ICD_INFO
      > (max)
{}

autoTest::TySetIcdInfo::TySetIcdInfo (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::TY_SET_ICD_INFO * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        TY_SET_ICD_INFO
      >
    (max, length, buffer, release)
{}

autoTest::TySetIcdInfo::TySetIcdInfo (
    const TySetIcdInfo &seq)
  : ::TAO::unbounded_value_sequence<
        TY_SET_ICD_INFO
      > (seq)
{}

autoTest::TySetIcdInfo::~TySetIcdInfo (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from 
// be/be_visitor_structure/structure_cs.cpp:56



// TAO_IDL - Generated from 
// be/be_visitor_sequence/sequence_cs.cpp:65

#if !defined (_AUTOTEST_STEPINFOSEQ_CS_)
#define _AUTOTEST_STEPINFOSEQ_CS_

autoTest::StepInfoSeq::StepInfoSeq (void)
{}

autoTest::StepInfoSeq::StepInfoSeq (
    ::CORBA::ULong max)
  : ::TAO::unbounded_value_sequence<
        TY_STEP_INFO
      > (max)
{}

autoTest::StepInfoSeq::StepInfoSeq (
    ::CORBA::ULong max,
    ::CORBA::ULong length,
    autoTest::TY_STEP_INFO * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::unbounded_value_sequence<
        TY_STEP_INFO
      >
    (max, length, buffer, release)
{}

autoTest::StepInfoSeq::StepInfoSeq (
    const StepInfoSeq &seq)
  : ::TAO::unbounded_value_sequence<
        TY_STEP_INFO
      > (seq)
{}

autoTest::StepInfoSeq::~StepInfoSeq (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for autoTest::HiAutoTest.

autoTest::HiAutoTest_ptr
TAO::Objref_Traits<autoTest::HiAutoTest>::duplicate (
    autoTest::HiAutoTest_ptr p)
{
  return autoTest::HiAutoTest::_duplicate (p);
}

void
TAO::Objref_Traits<autoTest::HiAutoTest>::release (
    autoTest::HiAutoTest_ptr p)
{
  ::CORBA::release (p);
}

autoTest::HiAutoTest_ptr
TAO::Objref_Traits<autoTest::HiAutoTest>::nil (void)
{
  return autoTest::HiAutoTest::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<autoTest::HiAutoTest>::marshal (
    const autoTest::HiAutoTest_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::startManualTest (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "startManualTest",
      15,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::stopManualTest (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "stopManualTest",
      14,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::startModel (const char * pData)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_pData (pData);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_pData
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "startModel",
      10,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::stopModel (const char * modelName)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_modelName (modelName);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_modelName
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "stopModel",
      9,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getModelRunStatus (const char * modelName,
::CORBA::Long_out modelStatus)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_modelName (modelName);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_modelStatus (modelStatus);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_modelName,
      &_tao_modelStatus
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getModelRunStatus",
      17,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setICDData (const ::autoTest::TySetIcdInfo & icdInfo,
::CORBA::Long icdNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TySetIcdInfo>::in_arg_val _tao_icdInfo (icdInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_icdNum (icdNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_icdInfo,
      &_tao_icdNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setICDData",
      10,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::sendICDData (const ::autoTest::TySendIcdInfo & icdInfo,
::CORBA::Long icdNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TySendIcdInfo>::in_arg_val _tao_icdInfo (icdInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_icdNum (icdNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_icdInfo,
      &_tao_icdNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "sendICDData",
      11,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getICDData (const ::autoTest::TyGetIcdInfo & icdInfoIn,
::autoTest::TyGetIcdInfo_out icdInfo,
::CORBA::Long icdNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TyGetIcdInfo>::in_arg_val _tao_icdInfoIn (icdInfoIn);
  TAO::Arg_Traits< ::autoTest::TyGetIcdInfo>::out_arg_val _tao_icdInfo (icdInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_icdNum (icdNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_icdInfoIn,
      &_tao_icdInfo,
      &_tao_icdNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "getICDData",
      10,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getModelParam (const ::autoTest::TyModelInfo & modelInfoIn,
::autoTest::TyModelInfo_out modelInfo,
::CORBA::Long modelNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TyModelInfo>::in_arg_val _tao_modelInfoIn (modelInfoIn);
  TAO::Arg_Traits< ::autoTest::TyModelInfo>::out_arg_val _tao_modelInfo (modelInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_modelNum (modelNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_modelInfoIn,
      &_tao_modelInfo,
      &_tao_modelNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "getModelParam",
      13,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setModelParam (const ::autoTest::TyModelInfo & modelInfo,
::CORBA::Long modelNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TyModelInfo>::in_arg_val _tao_modelInfo (modelInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_modelNum (modelNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_modelInfo,
      &_tao_modelNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setModelParam",
      13,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getModelVar (const ::autoTest::TyModelInfo & modelInfoIn,
::autoTest::TyModelInfo_out modelInfo,
::CORBA::Long modelNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TyModelInfo>::in_arg_val _tao_modelInfoIn (modelInfoIn);
  TAO::Arg_Traits< ::autoTest::TyModelInfo>::out_arg_val _tao_modelInfo (modelInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_modelNum (modelNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_modelInfoIn,
      &_tao_modelInfo,
      &_tao_modelNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      4,
      "getModelVar",
      11,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setModelVar (const ::autoTest::TyModelInfo & modelInfo,
::CORBA::Long modelNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TyModelInfo>::in_arg_val _tao_modelInfo (modelInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_modelNum (modelNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_modelInfo,
      &_tao_modelNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "setModelVar",
      11,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::optManualTestOneStep (const char * oneStep,
::autoTest::StepStatusSeq_out info)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_oneStep (oneStep);
  TAO::Arg_Traits< ::autoTest::StepStatusSeq>::out_arg_val _tao_info (info);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_oneStep,
      &_tao_info
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "optManualTestOneStep",
      20,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setCase (const char * caseData)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_caseData (caseData);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_caseData
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setCase",
      7,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setICD (const char * ICDInfo)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_ICDInfo (ICDInfo);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_ICDInfo
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setICD",
      6,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setChannelConfig (const char * channelConfig)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_channelConfig (channelConfig);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_channelConfig
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setChannelConfig",
      16,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setCurveConfig (const char * curveInfo)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_curveInfo (curveInfo);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_curveInfo
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setCurveConfig",
      14,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::start (const ::autoTest::TestExecute & testExecute)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::TestExecute>::in_arg_val _tao_testExecute (testExecute);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_testExecute
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "start",
      5,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::pause (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "pause",
      5,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::stop (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "stop",
      4,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::stopStep (const ::autoTest::StepInfoSeq & stepInfo)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::StepInfoSeq>::in_arg_val _tao_stepInfo (stepInfo);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_stepInfo
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "stopStep",
      8,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getCaseStatus (const ::autoTest::CaseStatusSeq & cardStatusDess,
::autoTest::CaseStatusSeq_out cardStatusVals)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::CaseStatusSeq>::in_arg_val _tao_cardStatusDess (cardStatusDess);
  TAO::Arg_Traits< ::autoTest::CaseStatusSeq>::out_arg_val _tao_cardStatusVals (cardStatusVals);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_cardStatusDess,
      &_tao_cardStatusVals
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getCaseStatus",
      13,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getStepStatus (const ::autoTest::StepStatusSeq & stepStatusDess,
::autoTest::StepStatusSeq_out stepStatusVals)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::StepStatusSeq>::in_arg_val _tao_stepStatusDess (stepStatusDess);
  TAO::Arg_Traits< ::autoTest::StepStatusSeq>::out_arg_val _tao_stepStatusVals (stepStatusVals);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_stepStatusDess,
      &_tao_stepStatusVals
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getStepStatus",
      13,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getSubStepStatus (const ::autoTest::SubStepStatusSeq & subStepStatusDess,
::autoTest::SubStepStatusSeq_out subStepStatusVals)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::SubStepStatusSeq>::in_arg_val _tao_subStepStatusDess (subStepStatusDess);
  TAO::Arg_Traits< ::autoTest::SubStepStatusSeq>::out_arg_val _tao_subStepStatusVals (subStepStatusVals);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_subStepStatusDess,
      &_tao_subStepStatusVals
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getSubStepStatus",
      16,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getFieldData (const ::autoTest::FieldData & fieldDataDess,
::autoTest::FieldData_out fieldDataVals)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::FieldData>::in_arg_val _tao_fieldDataDess (fieldDataDess);
  TAO::Arg_Traits< ::autoTest::FieldData>::out_arg_val _tao_fieldDataVals (fieldDataVals);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_fieldDataDess,
      &_tao_fieldDataVals
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getFieldData",
      12,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getCardsInfo (::autoTest::CardManagerSeq_out info)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::CardManagerSeq>::out_arg_val _tao_info (info);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_info
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getCardsInfo",
      12,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getServerStatus (::autoTest::StatusInfo_out info)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::StatusInfo>::out_arg_val _tao_info (info);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_info
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getServerStatus",
      15,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getExecutiveInfo (::autoTest::ExecutiveInfo_out info)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::ExecutiveInfo>::out_arg_val _tao_info (info);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_info
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getExecutiveInfo",
      16,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::setStorageConfig (const char * storageInfo)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageInfo (storageInfo);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageInfo
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "setStorageConfig",
      16,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getRecordListNum (::CORBA::Long_out listNum)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_listNum (listNum);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_listNum
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getRecordListNum",
      16,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getRecordList (::autoTest::RecordListSeq_out pList,
::CORBA::Long_out listLen)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< ::autoTest::RecordListSeq>::out_arg_val _tao_pList (pList);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_listLen (listLen);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_pList,
      &_tao_listLen
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      3,
      "getRecordList",
      13,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getDataByTime (const char * storageName,
const ::autoTest::FieldIcdInfo & varInfo,
const ::autoTest::TY_HI_TIME & startTime,
const ::autoTest::TY_HI_TIME & stopTime,
::autoTest::StorageDataSeq_out pData,
::autoTest::HiTimeSeq_out pTime,
::CORBA::Long & maxCount)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);
  TAO::Arg_Traits< ::autoTest::FieldIcdInfo>::in_arg_val _tao_varInfo (varInfo);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_startTime (startTime);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_stopTime (stopTime);
  TAO::Arg_Traits< ::autoTest::StorageDataSeq>::out_arg_val _tao_pData (pData);
  TAO::Arg_Traits< ::autoTest::HiTimeSeq>::out_arg_val _tao_pTime (pTime);
  TAO::Arg_Traits< ::CORBA::Long>::inout_arg_val _tao_maxCount (maxCount);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName,
      &_tao_varInfo,
      &_tao_startTime,
      &_tao_stopTime,
      &_tao_pData,
      &_tao_pTime,
      &_tao_maxCount
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "getDataByTime",
      13,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getDataByIndex (const char * storageName,
const ::autoTest::FieldIcdInfo & varInfo,
::CORBA::Long startIndex,
::CORBA::Long stopIndex,
::autoTest::StorageDataSeq_out pData,
::autoTest::HiTimeSeq_out pTime,
::CORBA::Long & maxCount)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);
  TAO::Arg_Traits< ::autoTest::FieldIcdInfo>::in_arg_val _tao_varInfo (varInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_startIndex (startIndex);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_stopIndex (stopIndex);
  TAO::Arg_Traits< ::autoTest::StorageDataSeq>::out_arg_val _tao_pData (pData);
  TAO::Arg_Traits< ::autoTest::HiTimeSeq>::out_arg_val _tao_pTime (pTime);
  TAO::Arg_Traits< ::CORBA::Long>::inout_arg_val _tao_maxCount (maxCount);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName,
      &_tao_varInfo,
      &_tao_startIndex,
      &_tao_stopIndex,
      &_tao_pData,
      &_tao_pTime,
      &_tao_maxCount
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "getDataByIndex",
      14,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getIndexByTime (const char * storageName,
const ::autoTest::FieldIcdInfo & varInfo,
const ::autoTest::TY_HI_TIME & startTime,
const ::autoTest::TY_HI_TIME & stopTime,
::CORBA::Long_out startIndex,
::CORBA::Long_out stopIndex)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);
  TAO::Arg_Traits< ::autoTest::FieldIcdInfo>::in_arg_val _tao_varInfo (varInfo);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_startTime (startTime);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_stopTime (stopTime);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_startIndex (startIndex);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_stopIndex (stopIndex);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName,
      &_tao_varInfo,
      &_tao_startTime,
      &_tao_stopTime,
      &_tao_startIndex,
      &_tao_stopIndex
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      7,
      "getIndexByTime",
      14,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::deleteStorageRecord (const char * storageName)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "deleteStorageRecord",
      19,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::deleteAllStorageRecord (void)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      1,
      "deleteAllStorageRecord",
      22,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getModelDataByTime (const char * storageName,
const ::autoTest::ModelInfo & varInfo,
const ::autoTest::TY_HI_TIME & startTime,
const ::autoTest::TY_HI_TIME & stopTime,
::autoTest::StorageDataSeq_out pData,
::autoTest::HiTimeSeq_out pTime,
::CORBA::Long & maxCount)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);
  TAO::Arg_Traits< ::autoTest::ModelInfo>::in_arg_val _tao_varInfo (varInfo);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_startTime (startTime);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_stopTime (stopTime);
  TAO::Arg_Traits< ::autoTest::StorageDataSeq>::out_arg_val _tao_pData (pData);
  TAO::Arg_Traits< ::autoTest::HiTimeSeq>::out_arg_val _tao_pTime (pTime);
  TAO::Arg_Traits< ::CORBA::Long>::inout_arg_val _tao_maxCount (maxCount);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName,
      &_tao_varInfo,
      &_tao_startTime,
      &_tao_stopTime,
      &_tao_pData,
      &_tao_pTime,
      &_tao_maxCount
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "getModelDataByTime",
      18,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getModelDataByIndex (const char * storageName,
const ::autoTest::ModelInfo & varInfo,
::CORBA::Long startIndex,
::CORBA::Long stopIndex,
::autoTest::StorageDataSeq_out pData,
::autoTest::HiTimeSeq_out pTime,
::CORBA::Long & maxCount)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);
  TAO::Arg_Traits< ::autoTest::ModelInfo>::in_arg_val _tao_varInfo (varInfo);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_startIndex (startIndex);
  TAO::Arg_Traits< ::CORBA::Long>::in_arg_val _tao_stopIndex (stopIndex);
  TAO::Arg_Traits< ::autoTest::StorageDataSeq>::out_arg_val _tao_pData (pData);
  TAO::Arg_Traits< ::autoTest::HiTimeSeq>::out_arg_val _tao_pTime (pTime);
  TAO::Arg_Traits< ::CORBA::Long>::inout_arg_val _tao_maxCount (maxCount);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName,
      &_tao_varInfo,
      &_tao_startIndex,
      &_tao_stopIndex,
      &_tao_pData,
      &_tao_pTime,
      &_tao_maxCount
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      8,
      "getModelDataByIndex",
      19,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getModelIndexByTime (const char * storageName,
const ::autoTest::ModelInfo & varInfo,
const ::autoTest::TY_HI_TIME & startTime,
const ::autoTest::TY_HI_TIME & stopTime,
::CORBA::Long_out startIndex,
::CORBA::Long_out stopIndex)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::in_arg_val _tao_storageName (storageName);
  TAO::Arg_Traits< ::autoTest::ModelInfo>::in_arg_val _tao_varInfo (varInfo);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_startTime (startTime);
  TAO::Arg_Traits< ::autoTest::TY_HI_TIME>::in_arg_val _tao_stopTime (stopTime);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_startIndex (startIndex);
  TAO::Arg_Traits< ::CORBA::Long>::out_arg_val _tao_stopIndex (stopIndex);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_storageName,
      &_tao_varInfo,
      &_tao_startTime,
      &_tao_stopTime,
      &_tao_startIndex,
      &_tao_stopIndex
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      7,
      "getModelIndexByTime",
      19,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

// TAO_IDL - Generated from
// be/be_visitor_operation/operation_cs.cpp:80

::autoTest::ReturnInfo
autoTest::HiAutoTest::getIpInfo (::CORBA::String_out ipInfo)
{
  if (!this->is_evaluated ())
    {
      ::CORBA::Object::tao_object_initialize (this);
    }
  
  TAO::Arg_Traits< ::autoTest::ReturnInfo>::ret_val _tao_retval;
  TAO::Arg_Traits< char *>::out_arg_val _tao_ipInfo (ipInfo);

  TAO::Argument *_the_tao_operation_signature [] =
    {
      &_tao_retval,
      &_tao_ipInfo
    };

  TAO::Invocation_Adapter _tao_call (
      this,
      _the_tao_operation_signature,
      2,
      "getIpInfo",
      9,
      0
    );

  _tao_call.invoke (0, 0);

  return _tao_retval.retn ();
}

autoTest::HiAutoTest::HiAutoTest (void)
{
  }

autoTest::HiAutoTest::~HiAutoTest (void)
{}

autoTest::HiAutoTest_ptr
autoTest::HiAutoTest::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<HiAutoTest>::narrow (
        _tao_objref,
        "IDL:autoTest/HiAutoTest:1.0",
        0
      );
}

autoTest::HiAutoTest_ptr
autoTest::HiAutoTest::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return
    TAO::Narrow_Utils<HiAutoTest>::unchecked_narrow (
        _tao_objref,
        "IDL:autoTest/HiAutoTest:1.0",
        0
      );
}

autoTest::HiAutoTest_ptr
autoTest::HiAutoTest::_nil (void)
{
  return 0;
}

autoTest::HiAutoTest_ptr
autoTest::HiAutoTest::_duplicate (HiAutoTest_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  
  return obj;
}

void
autoTest::HiAutoTest::_tao_release (HiAutoTest_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
autoTest::HiAutoTest::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:autoTest/HiAutoTest:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return this->::CORBA::Object::_is_a (value);
    }
}

const char* autoTest::HiAutoTest::_interface_repository_id (void) const
{
  return "IDL:autoTest/HiAutoTest:1.0";
}

::CORBA::Boolean
autoTest::HiAutoTest::marshal (TAO_OutputCDR &cdr)
{
  return (cdr << this);
}

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::Parameter &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.parameterName.in ()) &&
    (strm << _tao_aggregate.parameterID) &&
    (strm << _tao_aggregate.value.in ()) &&
    (strm << _tao_aggregate.defaultValue.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::Parameter &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.parameterName.out ()) &&
    (strm >> _tao_aggregate.parameterID) &&
    (strm >> _tao_aggregate.value.out ()) &&
    (strm >> _tao_aggregate.defaultValue.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_ParameterSeq_CPP_
#define _TAO_CDR_OP_autoTest_ParameterSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ParameterSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ParameterSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_ParameterSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ChannelPara &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.channelID) &&
    (strm << _tao_aggregate.direction) &&
    (strm << _tao_aggregate.mode) &&
    (strm << _tao_aggregate.paras);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ChannelPara &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.channelID) &&
    (strm >> _tao_aggregate.direction) &&
    (strm >> _tao_aggregate.mode) &&
    (strm >> _tao_aggregate.paras);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_ChannelParaSeq_CPP_
#define _TAO_CDR_OP_autoTest_ChannelParaSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ChannelParaSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ChannelParaSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_ChannelParaSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardPara &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.type.in ()) &&
    (strm << _tao_aggregate.cardNo) &&
    (strm << _tao_aggregate.cardName.in ()) &&
    (strm << _tao_aggregate.chnParas);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardPara &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.type.out ()) &&
    (strm >> _tao_aggregate.cardNo) &&
    (strm >> _tao_aggregate.cardName.out ()) &&
    (strm >> _tao_aggregate.chnParas);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CardParaSeq_CPP_
#define _TAO_CDR_OP_autoTest_CardParaSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardParaSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardParaSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CardParaSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardManagerPara &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.cardParas);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardManagerPara &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.cardParas);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CardManagerSeq_CPP_
#define _TAO_CDR_OP_autoTest_CardManagerSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardManagerSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardManagerSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CardManagerSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TY_HI_TIME &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.sec) &&
    (strm << _tao_aggregate.usec);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TY_HI_TIME &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.sec) &&
    (strm >> _tao_aggregate.usec);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ReturnInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.sec) &&
    (strm << _tao_aggregate.usec) &&
    (strm << _tao_aggregate.status);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ReturnInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.sec) &&
    (strm >> _tao_aggregate.usec) &&
    (strm >> _tao_aggregate.status);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_cs.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (TAO_OutputCDR &strm, autoTest::CaseStepStatusE _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR &strm, autoTest::CaseStepStatusE & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;
  
  if (_tao_success)
    {
      _tao_enumerator = static_cast<autoTest::CaseStepStatusE> (_tao_temp);
    }
  
  return _tao_success;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_cs.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (TAO_OutputCDR &strm, autoTest::ServerRunStatusE _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR &strm, autoTest::ServerRunStatusE & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;
  
  if (_tao_success)
    {
      _tao_enumerator = static_cast<autoTest::ServerRunStatusE> (_tao_temp);
    }
  
  return _tao_success;
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CaseExecute &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.caseID.in ()) &&
    (strm << _tao_aggregate.caseExecuteTimes) &&
    (strm << _tao_aggregate.interval);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CaseExecute &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.caseID.out ()) &&
    (strm >> _tao_aggregate.caseExecuteTimes) &&
    (strm >> _tao_aggregate.interval);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CaseExecuteSeq_CPP_
#define _TAO_CDR_OP_autoTest_CaseExecuteSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CaseExecuteSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CaseExecuteSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CaseExecuteSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TestExecute &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.testExecuteNum) &&
    (strm << _tao_aggregate.interval) &&
    (strm << _tao_aggregate.caseExecute);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TestExecute &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.testExecuteNum) &&
    (strm >> _tao_aggregate.interval) &&
    (strm >> _tao_aggregate.caseExecute);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CaseStatus &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.caseID.in ()) &&
    (strm << _tao_aggregate.caseStepStatus);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CaseStatus &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.caseID.out ()) &&
    (strm >> _tao_aggregate.caseStepStatus);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CaseStatusSeq_CPP_
#define _TAO_CDR_OP_autoTest_CaseStatusSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CaseStatusSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CaseStatusSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CaseStatusSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StepStatus &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.caseID.in ()) &&
    (strm << _tao_aggregate.stepID.in ()) &&
    (strm << _tao_aggregate.caseStepStatus) &&
    (strm << _tao_aggregate.msg.in ()) &&
    (strm << _tao_aggregate.attachInfo.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StepStatus &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.caseID.out ()) &&
    (strm >> _tao_aggregate.stepID.out ()) &&
    (strm >> _tao_aggregate.caseStepStatus) &&
    (strm >> _tao_aggregate.msg.out ()) &&
    (strm >> _tao_aggregate.attachInfo.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_StepStatusSeq_CPP_
#define _TAO_CDR_OP_autoTest_StepStatusSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StepStatusSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StepStatusSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_StepStatusSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SubStepStatus &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.caseID.in ()) &&
    (strm << _tao_aggregate.stepID.in ()) &&
    (strm << _tao_aggregate.subStepID.in ()) &&
    (strm << _tao_aggregate.caseStepStatus) &&
    (strm << _tao_aggregate.msg.in ()) &&
    (strm << _tao_aggregate.attachInfo.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SubStepStatus &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.caseID.out ()) &&
    (strm >> _tao_aggregate.stepID.out ()) &&
    (strm >> _tao_aggregate.subStepID.out ()) &&
    (strm >> _tao_aggregate.caseStepStatus) &&
    (strm >> _tao_aggregate.msg.out ()) &&
    (strm >> _tao_aggregate.attachInfo.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_SubStepStatusSeq_CPP_
#define _TAO_CDR_OP_autoTest_SubStepStatusSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SubStepStatusSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SubStepStatusSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_SubStepStatusSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::FieldData &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.icdID.in ()) &&
    (strm << _tao_aggregate.fieldID.in ()) &&
    (strm << _tao_aggregate.data);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::FieldData &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.icdID.out ()) &&
    (strm >> _tao_aggregate.fieldID.out ()) &&
    (strm >> _tao_aggregate.data);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardStatus &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.id) &&
    (strm << _tao_aggregate.status);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardStatus &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.id) &&
    (strm >> _tao_aggregate.status);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CardStatusSeq_CPP_
#define _TAO_CDR_OP_autoTest_CardStatusSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardStatusSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardStatusSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CardStatusSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ServerStatus &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.id) &&
    (strm << _tao_aggregate.serverRunStatus) &&
    (strm << _tao_aggregate.cardStatus);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ServerStatus &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.id) &&
    (strm >> _tao_aggregate.serverRunStatus) &&
    (strm >> _tao_aggregate.cardStatus);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CommonStatusInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.id) &&
    (strm << _tao_aggregate.status) &&
    (strm << _tao_aggregate.statusMsg.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CommonStatusInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.id) &&
    (strm >> _tao_aggregate.status) &&
    (strm >> _tao_aggregate.statusMsg.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CommonStatusInfoSeq_CPP_
#define _TAO_CDR_OP_autoTest_CommonStatusInfoSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CommonStatusInfoSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CommonStatusInfoSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CommonStatusInfoSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardStatusInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.cardID) &&
    (strm << _tao_aggregate.cardStatus) &&
    (strm << _tao_aggregate.channelStatusInfos);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardStatusInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.cardID) &&
    (strm >> _tao_aggregate.cardStatus) &&
    (strm >> _tao_aggregate.channelStatusInfos);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_CardStatusInfoSeq_CPP_
#define _TAO_CDR_OP_autoTest_CardStatusInfoSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::CardStatusInfoSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::CardStatusInfoSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_CardStatusInfoSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StatusInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.targetStatus) &&
    (strm << _tao_aggregate.cardStatusInfos);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StatusInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.targetStatus) &&
    (strm >> _tao_aggregate.cardStatusInfos);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ExecutiveInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.preCaseID.in ()) &&
    (strm << _tao_aggregate.preStepID.in ()) &&
    (strm << _tao_aggregate.caseRunTimes) &&
    (strm << _tao_aggregate.successNum) &&
    (strm << _tao_aggregate.failNum) &&
    (strm << _tao_aggregate.runStatus);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ExecutiveInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.preCaseID.out ()) &&
    (strm >> _tao_aggregate.preStepID.out ()) &&
    (strm >> _tao_aggregate.caseRunTimes) &&
    (strm >> _tao_aggregate.successNum) &&
    (strm >> _tao_aggregate.failNum) &&
    (strm >> _tao_aggregate.runStatus);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::RecordInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.icdID.in ()) &&
    (strm << _tao_aggregate.startTime) &&
    (strm << _tao_aggregate.stopTime) &&
    (strm << _tao_aggregate.dataType) &&
    (strm << _tao_aggregate.dataCount) &&
    (strm << _tao_aggregate.dataLength);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::RecordInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.icdID.out ()) &&
    (strm >> _tao_aggregate.startTime) &&
    (strm >> _tao_aggregate.stopTime) &&
    (strm >> _tao_aggregate.dataType) &&
    (strm >> _tao_aggregate.dataCount) &&
    (strm >> _tao_aggregate.dataLength);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_RecordInfoSeq_CPP_
#define _TAO_CDR_OP_autoTest_RecordInfoSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::RecordInfoSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::RecordInfoSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_RecordInfoSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_fieldIDSeq_CPP_
#define _TAO_CDR_OP_autoTest_fieldIDSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::fieldIDSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::fieldIDSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_fieldIDSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::FieldIcdInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.fieldID) &&
    (strm << _tao_aggregate.fieldNum) &&
    (strm << _tao_aggregate.ICDID.in ()) &&
    (strm << _tao_aggregate.caseID.in ()) &&
    (strm << _tao_aggregate.cardID) &&
    (strm << _tao_aggregate.channelID);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::FieldIcdInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.fieldID) &&
    (strm >> _tao_aggregate.fieldNum) &&
    (strm >> _tao_aggregate.ICDID.out ()) &&
    (strm >> _tao_aggregate.caseID.out ()) &&
    (strm >> _tao_aggregate.cardID) &&
    (strm >> _tao_aggregate.channelID);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ModelInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.modelName.in ()) &&
    (strm << _tao_aggregate.varName) &&
    (strm << _tao_aggregate.varNum);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ModelInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.modelName.out ()) &&
    (strm >> _tao_aggregate.varName) &&
    (strm >> _tao_aggregate.varNum);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::RecordList &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.name.in ()) &&
    (strm << _tao_aggregate.path.in ()) &&
    (strm << _tao_aggregate.startTime) &&
    (strm << _tao_aggregate.stopTime) &&
    (strm << _tao_aggregate.dataCount) &&
    (strm << _tao_aggregate.dataLength) &&
    (strm << _tao_aggregate.icdInfo) &&
    (strm << _tao_aggregate.icdCount);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::RecordList &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.name.out ()) &&
    (strm >> _tao_aggregate.path.out ()) &&
    (strm >> _tao_aggregate.startTime) &&
    (strm >> _tao_aggregate.stopTime) &&
    (strm >> _tao_aggregate.dataCount) &&
    (strm >> _tao_aggregate.dataLength) &&
    (strm >> _tao_aggregate.icdInfo) &&
    (strm >> _tao_aggregate.icdCount);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_RecordListSeq_CPP_
#define _TAO_CDR_OP_autoTest_RecordListSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::RecordListSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::RecordListSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_RecordListSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_Payload_CPP_
#define _TAO_CDR_OP_autoTest_Payload_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::Payload &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::Payload &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_Payload_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StorageData &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.data);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StorageData &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.data);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_StorageDataSeq_CPP_
#define _TAO_CDR_OP_autoTest_StorageDataSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StorageDataSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StorageDataSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_StorageDataSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_HiTimeSeq_CPP_
#define _TAO_CDR_OP_autoTest_HiTimeSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::HiTimeSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::HiTimeSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_HiTimeSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_SqFieldID_CPP_
#define _TAO_CDR_OP_autoTest_SqFieldID_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SqFieldID &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SqFieldID &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_SqFieldID_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_IcdData_CPP_
#define _TAO_CDR_OP_autoTest_IcdData_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::IcdData &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::IcdData &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_IcdData_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::GetIcdInfo &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.icdID.in ()) &&
    (strm << _tao_aggregate.fieldID) &&
    (strm << _tao_aggregate.cardType.in ()) &&
    (strm << _tao_aggregate.cardID) &&
    (strm << _tao_aggregate.fieldNum) &&
    (strm << _tao_aggregate.data);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::GetIcdInfo &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.icdID.out ()) &&
    (strm >> _tao_aggregate.fieldID) &&
    (strm >> _tao_aggregate.cardType.out ()) &&
    (strm >> _tao_aggregate.cardID) &&
    (strm >> _tao_aggregate.fieldNum) &&
    (strm >> _tao_aggregate.data);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_TyGetIcdInfo_CPP_
#define _TAO_CDR_OP_autoTest_TyGetIcdInfo_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TyGetIcdInfo &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TyGetIcdInfo &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_TyGetIcdInfo_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::send_icd_info &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.icdID.in ()) &&
    (strm << _tao_aggregate.cardType.in ()) &&
    (strm << _tao_aggregate.cardID);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::send_icd_info &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.icdID.out ()) &&
    (strm >> _tao_aggregate.cardType.out ()) &&
    (strm >> _tao_aggregate.cardID);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_TySendIcdInfo_CPP_
#define _TAO_CDR_OP_autoTest_TySendIcdInfo_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TySendIcdInfo &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TySendIcdInfo &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_TySendIcdInfo_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_SqFullPath_CPP_
#define _TAO_CDR_OP_autoTest_SqFullPath_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::SqFullPath &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::SqFullPath &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_SqFullPath_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_ModeData_CPP_
#define _TAO_CDR_OP_autoTest_ModeData_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::ModeData &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::ModeData &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_ModeData_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::model_info &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.modelName.in ()) &&
    (strm << _tao_aggregate.fullPath) &&
    (strm << _tao_aggregate.data) &&
    (strm << _tao_aggregate.num);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::model_info &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.modelName.out ()) &&
    (strm >> _tao_aggregate.fullPath) &&
    (strm >> _tao_aggregate.data) &&
    (strm >> _tao_aggregate.num);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_TyModelInfo_CPP_
#define _TAO_CDR_OP_autoTest_TyModelInfo_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TyModelInfo &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TyModelInfo &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_TyModelInfo_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::set_icd_info &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.icdID.in ()) &&
    (strm << _tao_aggregate.fieldID) &&
    (strm << _tao_aggregate.data) &&
    (strm << _tao_aggregate.fieldNum);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::set_icd_info &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.icdID.out ()) &&
    (strm >> _tao_aggregate.fieldID) &&
    (strm >> _tao_aggregate.data) &&
    (strm >> _tao_aggregate.fieldNum);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_TySetIcdInfo_CPP_
#define _TAO_CDR_OP_autoTest_TySetIcdInfo_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::TySetIcdInfo &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::TySetIcdInfo &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_TySetIcdInfo_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::step_info &_tao_aggregate
  )
{
  return
    (strm << _tao_aggregate.caseID.in ()) &&
    (strm << _tao_aggregate.stepID.in ());
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::step_info &_tao_aggregate
  )
{
  return
    (strm >> _tao_aggregate.caseID.out ()) &&
    (strm >> _tao_aggregate.stepID.out ());
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:91
#if !defined _TAO_CDR_OP_autoTest_StepInfoSeq_CPP_
#define _TAO_CDR_OP_autoTest_StepInfoSeq_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::StepInfoSeq &_tao_sequence
  )
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::StepInfoSeq &_tao_sequence
  )
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_autoTest_StepInfoSeq_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_cs.cpp:53

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const autoTest::HiAutoTest_ptr _tao_objref)
{
  ::CORBA::Object_ptr _tao_corba_obj = _tao_objref;
  return (strm << _tao_corba_obj);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    autoTest::HiAutoTest_ptr &_tao_objref)
{
  ::CORBA::Object_var obj;

  if (!(strm >> obj.inout ()))
    {
      return false;
    }
  
  typedef ::autoTest::HiAutoTest RHS_SCOPED_NAME;

  // Narrow to the right type.
  _tao_objref =
    TAO::Narrow_Utils<RHS_SCOPED_NAME>::unchecked_narrow (
        obj.in (),
        0
      );
    
  return true;
}

TAO_END_VERSIONED_NAMESPACE_DECL



