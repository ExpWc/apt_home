// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.0.2
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:448

#ifndef _TAO_IDL_HIAUTOTESTSERVERS_MNIWIO_H_
#define _TAO_IDL_HIAUTOTESTSERVERS_MNIWIO_H_

#include /**/ "ace/pre.h"

#include "HiAutoTestServerC.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/Collocation_Proxy_Broker.h"
#include "tao/PortableServer/PortableServer.h"
#include "tao/PortableServer/Servant_Base.h"

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:41

namespace POA_autoTest
{
  

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_sh.cpp:78

  class HiAutoTest;
  typedef HiAutoTest *HiAutoTest_ptr;

  class  HiAutoTest
    : public virtual PortableServer::ServantBase
  {
  protected:
    HiAutoTest (void);
  
  public:
    /// Useful for template programming.
    typedef ::autoTest::HiAutoTest _stub_type;
    typedef ::autoTest::HiAutoTest_ptr _stub_ptr_type;
    typedef ::autoTest::HiAutoTest_var _stub_var_type;

    HiAutoTest (const HiAutoTest& rhs);
    virtual ~HiAutoTest (void);

    virtual ::CORBA::Boolean _is_a (const char* logical_type_id);

    static void _is_a_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _non_existent_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _interface_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _component_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    static void _repository_id_skel (
        TAO_ServerRequest & req,
        void * servant_upcall,
        void * servant);
    
    virtual void _dispatch (
        TAO_ServerRequest & req,
        void * servant_upcall);
    
    ::autoTest::HiAutoTest *_this (void);
    
    virtual const char* _interface_repository_id (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo startManualTest (void) = 0;

    static void startManualTest_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo stopManualTest (void) = 0;

    static void stopManualTest_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo startModel (const char * pData) = 0;

    static void startModel_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo stopModel (const char * modelName) = 0;

    static void stopModel_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getModelRunStatus (const char * modelName,
    ::CORBA::Long_out modelStatus) = 0;

    static void getModelRunStatus_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setICDData (const ::autoTest::TySetIcdInfo & icdInfo,
    ::CORBA::Long icdNum) = 0;

    static void setICDData_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo sendICDData (const ::autoTest::TySendIcdInfo & icdInfo,
    ::CORBA::Long icdNum) = 0;

    static void sendICDData_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getICDData (const ::autoTest::TyGetIcdInfo & icdInfoIn,
    ::autoTest::TyGetIcdInfo_out icdInfo,
    ::CORBA::Long icdNum) = 0;

    static void getICDData_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getModelParam (const ::autoTest::TyModelInfo & modelInfoIn,
    ::autoTest::TyModelInfo_out modelInfo,
    ::CORBA::Long modelNum) = 0;

    static void getModelParam_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setModelParam (const ::autoTest::TyModelInfo & modelInfo,
    ::CORBA::Long modelNum) = 0;

    static void setModelParam_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getModelVar (const ::autoTest::TyModelInfo & modelInfoIn,
    ::autoTest::TyModelInfo_out modelInfo,
    ::CORBA::Long modelNum) = 0;

    static void getModelVar_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setModelVar (const ::autoTest::TyModelInfo & modelInfo,
    ::CORBA::Long modelNum) = 0;

    static void setModelVar_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo optManualTestOneStep (const char * oneStep,
    ::autoTest::StepStatusSeq_out info) = 0;

    static void optManualTestOneStep_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setCase (const char * caseData) = 0;

    static void setCase_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setICD (const char * ICDInfo) = 0;

    static void setICD_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setChannelConfig (const char * channelConfig) = 0;

    static void setChannelConfig_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setCurveConfig (const char * curveInfo) = 0;

    static void setCurveConfig_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo start (const ::autoTest::TestExecute & testExecute) = 0;

    static void start_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo pause (void) = 0;

    static void pause_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo stop (void) = 0;

    static void stop_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo stopStep (const ::autoTest::StepInfoSeq & stepInfo) = 0;

    static void stopStep_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getCaseStatus (const ::autoTest::CaseStatusSeq & cardStatusDess,
    ::autoTest::CaseStatusSeq_out cardStatusVals) = 0;

    static void getCaseStatus_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getStepStatus (const ::autoTest::StepStatusSeq & stepStatusDess,
    ::autoTest::StepStatusSeq_out stepStatusVals) = 0;

    static void getStepStatus_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getSubStepStatus (const ::autoTest::SubStepStatusSeq & subStepStatusDess,
    ::autoTest::SubStepStatusSeq_out subStepStatusVals) = 0;

    static void getSubStepStatus_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getFieldData (const ::autoTest::FieldData & fieldDataDess,
    ::autoTest::FieldData_out fieldDataVals) = 0;

    static void getFieldData_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getCardsInfo (::autoTest::CardManagerSeq_out info) = 0;

    static void getCardsInfo_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getServerStatus (::autoTest::StatusInfo_out info) = 0;

    static void getServerStatus_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getExecutiveInfo (::autoTest::ExecutiveInfo_out info) = 0;

    static void getExecutiveInfo_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo setStorageConfig (const char * storageInfo) = 0;

    static void setStorageConfig_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getRecordListNum (::CORBA::Long_out listNum) = 0;

    static void getRecordListNum_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getRecordList (::autoTest::RecordListSeq_out pList,
    ::CORBA::Long_out listLen) = 0;

    static void getRecordList_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getDataByTime (const char * storageName,
    const ::autoTest::FieldIcdInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount) = 0;

    static void getDataByTime_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getDataByIndex (const char * storageName,
    const ::autoTest::FieldIcdInfo & varInfo,
    ::CORBA::Long startIndex,
    ::CORBA::Long stopIndex,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount) = 0;

    static void getDataByIndex_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getIndexByTime (const char * storageName,
    const ::autoTest::FieldIcdInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::CORBA::Long_out startIndex,
    ::CORBA::Long_out stopIndex) = 0;

    static void getIndexByTime_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo deleteStorageRecord (const char * storageName) = 0;

    static void deleteStorageRecord_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo deleteAllStorageRecord (void) = 0;

    static void deleteAllStorageRecord_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getModelDataByTime (const char * storageName,
    const ::autoTest::ModelInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount) = 0;

    static void getModelDataByTime_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getModelDataByIndex (const char * storageName,
    const ::autoTest::ModelInfo & varInfo,
    ::CORBA::Long startIndex,
    ::CORBA::Long stopIndex,
    ::autoTest::StorageDataSeq_out pData,
    ::autoTest::HiTimeSeq_out pTime,
    ::CORBA::Long & maxCount) = 0;

    static void getModelDataByIndex_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getModelIndexByTime (const char * storageName,
    const ::autoTest::ModelInfo & varInfo,
    const ::autoTest::TY_HI_TIME & startTime,
    const ::autoTest::TY_HI_TIME & stopTime,
    ::CORBA::Long_out startIndex,
    ::CORBA::Long_out stopIndex) = 0;

    static void getModelIndexByTime_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);

    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_sh.cpp:41

    virtual ::autoTest::ReturnInfo getIpInfo (::CORBA::String_out ipInfo) = 0;

    static void getIpInfo_skel (
        TAO_ServerRequest & server_request,
        void * servant_upcall,
        void * servant);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_sh.cpp:72

} // module autoTest
#if defined (__ACE_INLINE__)
#include "HiAutoTestServerS.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

